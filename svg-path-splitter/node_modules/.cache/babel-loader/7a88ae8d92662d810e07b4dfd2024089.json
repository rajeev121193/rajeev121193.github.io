{"ast":null,"code":"var _jsxFileName = \"/Users/mkumar18/dev/tools/svg-path-splitter/src/Images.js\",\n    _s = $RefreshSig$();\n\nimport \"./Images.css\";\nimport React, { useState, useRef } from \"react\";\nimport uploadIcon from \"./upload-solid.svg\";\nimport downloadIcon from \"./download-solid.svg\";\nimport { OptimizeSvg } from \"./OptimizeSvg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Images() {\n  _s();\n\n  const fileInputField = useRef(null);\n  const outputFileContainer = useRef(null);\n  const [inputFile, setInputFile] = useState(null);\n  const [outputFile, setOutputFile] = useState(null);\n  const [dragging, setDragging] = useState(false);\n\n  const preventDefaultFn = e => {\n    e.preventDefault();\n  };\n\n  const onDragEnter = e => {\n    setDragging(true);\n  };\n\n  const onDragLeave = e => {\n    setDragging(false);\n  };\n\n  const fileDrop = e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n\n    if (files.length === 1) {\n      handleInputFile(files[0]);\n    }\n  };\n\n  const handleNewFileUpload = e => {\n    const {\n      files\n    } = e.target;\n\n    if (files.length === 1) {\n      handleInputFile(files[0]);\n    }\n  };\n\n  const handleInputFile = file => {\n    setInputFile(file);\n    OptimizeSvg(URL.createObjectURL(file), setOutputFile);\n  }; // Simulates click of hidden input element for all upload actions\n\n\n  const handleUploadAction = () => {\n    fileInputField.current.click();\n  };\n\n  const didUploadSvgFile = inputFile && inputFile.type.split(\"/\")[0] === \"image\" && inputFile.type.split(\"/\")[1].indexOf(\"svg\") !== -1; // Set the output file preview\n\n  if (didUploadSvgFile && outputFile) {\n    outputFileContainer.current.innerHTML = outputFile;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Images\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        display: \"none\"\n      },\n      type: \"file\",\n      ref: fileInputField,\n      onChange: handleNewFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), didUploadSvgFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Images-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"input-svg-preview\",\n        src: URL.createObjectURL(inputFile),\n        alt: \"input svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: uploadIcon,\n        className: \"upload-button cursor-pointer\",\n        onClick: handleUploadAction,\n        alt: \"upload file\",\n        width: \"40\",\n        height: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `file-upload-area cursor-pointer${dragging ? \" hovering\" : \"\"}`,\n      onClick: handleUploadAction,\n      onDragOver: preventDefaultFn,\n      onDragEnter: onDragEnter,\n      onDragLeave: onDragLeave,\n      onDrop: fileDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop your files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click anywhere to choose from files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `Images-output${outputFile ? \"\" : \" hide\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-svg-preview\",\n        ref: outputFileContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: downloadIcon,\n        className: \"download-button cursor-pointer\",\n        onClick: handleUploadAction,\n        alt: \"download file\",\n        width: \"40\",\n        height: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Images, \"L/2mnQ2aDns3jiTLnI94WTMtd9o=\");\n\n_c = Images;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"sources":["/Users/mkumar18/dev/tools/svg-path-splitter/src/Images.js"],"names":["React","useState","useRef","OptimizeSvg","Images","fileInputField","outputFileContainer","inputFile","setInputFile","outputFile","setOutputFile","dragging","setDragging","preventDefaultFn","e","preventDefault","onDragEnter","onDragLeave","fileDrop","files","dataTransfer","length","handleInputFile","handleNewFileUpload","target","file","URL","createObjectURL","handleUploadAction","current","click","didUploadSvgFile","type","split","indexOf","innerHTML","display","uploadIcon","downloadIcon"],"mappings":"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","sourcesContent":["import \"./Images.css\";\nimport React, {useState, useRef} from \"react\";\nimport uploadIcon from \"./upload-solid.svg\";\nimport downloadIcon from \"./download-solid.svg\";\nimport {OptimizeSvg} from \"./OptimizeSvg\";\n\nexport default function Images() {\n    const fileInputField = useRef(null);\n    const outputFileContainer = useRef(null);\n    const [inputFile, setInputFile] = useState(null);\n    const [outputFile, setOutputFile] = useState(null);\n    const [dragging, setDragging] = useState(false);\n\n    const preventDefaultFn = e => {\n        e.preventDefault();\n    };\n\n    const onDragEnter = e => {\n        setDragging(true);\n    };\n\n    const onDragLeave = e => {\n        setDragging(false);\n    };\n\n    const fileDrop = e => {\n        e.preventDefault();\n        const files = e.dataTransfer.files;\n        if (files.length === 1) {\n            handleInputFile(files[0]);\n        }\n    };\n\n    const handleNewFileUpload = e => {\n        const {files} = e.target;\n        if (files.length === 1) {\n            handleInputFile(files[0]);\n        }\n    };\n\n    const handleInputFile = file => {\n        setInputFile(file);\n        OptimizeSvg(URL.createObjectURL(file), setOutputFile);\n    };\n\n    // Simulates click of hidden input element for all upload actions\n    const handleUploadAction = () => {\n        fileInputField.current.click();\n    };\n\n    const didUploadSvgFile =\n        inputFile &&\n        inputFile.type.split(\"/\")[0] === \"image\" &&\n        inputFile.type.split(\"/\")[1].indexOf(\"svg\") !== -1;\n\n    // Set the output file preview\n    if (didUploadSvgFile && outputFile) {\n        outputFileContainer.current.innerHTML = outputFile;\n    }\n\n    return (\n        <div className=\"Images\">\n            <input\n                style={{display: \"none\"}}\n                type=\"file\"\n                ref={fileInputField}\n                onChange={handleNewFileUpload}\n            />\n            {didUploadSvgFile ? (\n                <div className=\"Images-input\">\n                    <img\n                        className=\"input-svg-preview\"\n                        src={URL.createObjectURL(inputFile)}\n                        alt=\"input svg\"></img>\n                    <img\n                        src={uploadIcon}\n                        className=\"upload-button cursor-pointer\"\n                        onClick={handleUploadAction}\n                        alt=\"upload file\"\n                        width=\"40\"\n                        height=\"40\"></img>\n                </div>\n            ) : (\n                <div\n                    className={`file-upload-area cursor-pointer${\n                        dragging ? \" hovering\" : \"\"\n                    }`}\n                    onClick={handleUploadAction}\n                    onDragOver={preventDefaultFn}\n                    onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDrop={fileDrop}>\n                    <p>Drag and drop your files</p>\n                    <br />\n                    <br />\n                    <p>Click anywhere to choose from files</p>\n                </div>\n            )}\n            <div className={`Images-output${outputFile ? \"\" : \" hide\"}`}>\n                <div\n                    className=\"output-svg-preview\"\n                    ref={outputFileContainer}></div>\n                <img\n                    src={downloadIcon}\n                    className=\"download-button cursor-pointer\"\n                    onClick={handleUploadAction}\n                    alt=\"download file\"\n                    width=\"40\"\n                    height=\"40\"></img>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}