{"ast":null,"code":"var _jsxFileName = \"/Users/mkumar18/dev/tools/svg-path-splitter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\"; // import {PathSplitter} from \"./PathSplitter\";\n\nimport UserImageRenderer from \"./Images\";\nimport SampleImageRenderer from \"./Images\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getOutputSvg(inputSvg) {\n  const x = inputSvg.getElementsByTagName(\"path\").getAttribute(\"d\");\n  console.log(x);\n}\n\nfunction App() {\n  _s();\n\n  // const input = \"\";\n  // const color = \"#393A3D\";\n  // // const color = \"#8D9096\";\n  // const white = \"#FFFFFF\";\n  // let last = \"\";\n  // let finalStr = \"\";\n  // PathSplitter(input).forEach(x => {\n  //     const curr = x.split(\" \")[1];\n  //     const finalColor = last === curr ? white : color;\n  //     last = curr;\n  //     finalStr += `\n  //   <path\n  //     android:pathData=\"${x}\"\n  //     android:fillColor=\"${finalColor}\"/>\n  //   `;\n  // });\n  // console.log(finalStr);\n  const [userInputProcessed, setUserInputProcessed] = useState(false); // getOutputSvg(InputSvg);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: \"SVG Optimizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), userInputProcessed ? /*#__PURE__*/_jsxDEV(UserImageRenderer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(SampleImageRenderer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"App-settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"55Gr1No2w+0h80aFnfGxOOIk49Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mkumar18/dev/tools/svg-path-splitter/src/App.js"],"names":["React","useState","UserImageRenderer","SampleImageRenderer","getOutputSvg","inputSvg","x","getElementsByTagName","getAttribute","console","log","App","userInputProcessed","setUserInputProcessed"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,UAA9B;AACA,OAAOC,mBAAP,MAAgC,UAAhC;;;AAEA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC5B,QAAMC,CAAC,GAAGD,QAAQ,CAACE,oBAAT,CAA8B,MAA9B,EAAsCC,YAAtC,CAAmD,GAAnD,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACH;;AAED,SAASK,GAAT,GAAe;AAAA;;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,CAAC,KAAD,CAA5D,CAnBW,CAoBX;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKW,kBAAkB,gBACf,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YADe,gBAGf,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YALR,eAOI;AAAS,MAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAhCQD,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport React, {useState} from \"react\";\n// import {PathSplitter} from \"./PathSplitter\";\nimport UserImageRenderer from \"./Images\";\nimport SampleImageRenderer from \"./Images\";\n\nfunction getOutputSvg(inputSvg) {\n    const x = inputSvg.getElementsByTagName(\"path\").getAttribute(\"d\");\n    console.log(x);\n}\n\nfunction App() {\n    // const input = \"\";\n    // const color = \"#393A3D\";\n    // // const color = \"#8D9096\";\n    // const white = \"#FFFFFF\";\n    // let last = \"\";\n    // let finalStr = \"\";\n    // PathSplitter(input).forEach(x => {\n    //     const curr = x.split(\" \")[1];\n    //     const finalColor = last === curr ? white : color;\n    //     last = curr;\n    //     finalStr += `\n    //   <path\n    //     android:pathData=\"${x}\"\n    //     android:fillColor=\"${finalColor}\"/>\n    //   `;\n    // });\n    // console.log(finalStr);\n\n    const [userInputProcessed, setUserInputProcessed] = useState(false);\n    // getOutputSvg(InputSvg);\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">SVG Optimizer</header>\n            {userInputProcessed ? (\n                <UserImageRenderer />\n            ) : (\n                <SampleImageRenderer />\n            )}\n            <section className=\"App-settings\"></section>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}