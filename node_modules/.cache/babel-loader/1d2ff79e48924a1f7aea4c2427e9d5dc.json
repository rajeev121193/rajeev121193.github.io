{"ast":null,"code":"var _jsxFileName = \"/Users/mkumar18/dev/tools/svg-path-splitter/src/Images.js\",\n    _s = $RefreshSig$();\n\nimport \"./Images.css\";\nimport React, { useState, useRef } from \"react\";\nimport uploadIcon from \"./upload-solid.svg\";\nimport downloadIcon from \"./download-solid.svg\";\nimport { OptimizeSvg } from \"./OptimizeSvg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Images() {\n  _s();\n\n  const fileInputField = useRef(null);\n  const outputFileContainer = useRef(null);\n  const [inputFile, setInputFile] = useState(null);\n  const [outputFile, setOutputFile] = useState(null);\n  const [dragging, setDragging] = useState(false);\n\n  const preventDefaultFn = e => {\n    e.preventDefault();\n  };\n\n  const onDragEnter = e => {\n    setDragging(true);\n  };\n\n  const onDragLeave = e => {\n    setDragging(false);\n  };\n\n  const fileDrop = e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n\n    if (files.length === 1) {\n      handleInputFile(files[0]);\n    }\n  };\n\n  const handleNewFileUpload = e => {\n    const {\n      files\n    } = e.target;\n\n    if (files.length === 1) {\n      handleInputFile(files[0]);\n    }\n  };\n\n  const handleInputFile = file => {\n    setInputFile(file);\n    OptimizeSvg(URL.createObjectURL(file), setOutputFile);\n  };\n\n  const handleUploadAction = () => {\n    fileInputField.current.click();\n  };\n\n  const didUploadSvgFile = inputFile && inputFile.type.split(\"/\")[0] === \"image\" && inputFile.type.split(\"/\")[1].indexOf(\"svg\") !== -1;\n\n  if (outputFile && outputFileContainer.current) {\n    outputFileContainer.current.innerHTML = outputFile;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Images\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        display: \"none\"\n      },\n      type: \"file\",\n      ref: fileInputField,\n      onChange: handleNewFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), didUploadSvgFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Images-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(inputFile),\n        alt: \"input svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: uploadIcon,\n        className: \"upload-button\",\n        onClick: handleUploadAction,\n        alt: \"upload file\",\n        width: \"40\",\n        height: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `file-upload-area ${dragging ? \"hovering\" : \"\"}`,\n      onClick: handleUploadAction,\n      onDragOver: preventDefaultFn,\n      onDragEnter: onDragEnter,\n      onDragLeave: onDragLeave,\n      onDrop: fileDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Drag and drop your files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Click anywhere to choose from files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `Images-output ${outputFile ? \"\" : \"hide\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: outputFileContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: downloadIcon,\n        className: \"download-button\",\n        onClick: handleUploadAction,\n        alt: \"download file\",\n        width: \"40\",\n        height: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Images, \"L/2mnQ2aDns3jiTLnI94WTMtd9o=\");\n\n_c = Images;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"sources":["/Users/mkumar18/dev/tools/svg-path-splitter/src/Images.js"],"names":["React","useState","useRef","OptimizeSvg","Images","fileInputField","outputFileContainer","inputFile","setInputFile","outputFile","setOutputFile","dragging","setDragging","preventDefaultFn","e","preventDefault","onDragEnter","onDragLeave","fileDrop","files","dataTransfer","length","handleInputFile","handleNewFileUpload","target","file","URL","createObjectURL","handleUploadAction","current","click","didUploadSvgFile","type","split","indexOf","innerHTML","display","uploadIcon","downloadIcon"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;;;AAGA,SAAQC,WAAR,QAA0B,eAA1B;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAMC,cAAc,GAAGH,MAAM,CAAC,IAAD,CAA7B;AACA,QAAMI,mBAAmB,GAAGJ,MAAM,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMY,gBAAgB,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIF,CAAD,IAAO;AACvBF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMK,WAAW,GAAIH,CAAD,IAAO;AACvBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAMM,QAAQ,GAAIJ,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMI,KAAK,GAAGL,CAAC,CAACM,YAAF,CAAeD,KAA7B;;AACA,QAAIA,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACpBC,MAAAA,eAAe,CAACH,KAAK,CAAC,CAAD,CAAN,CAAf;AACH;AACJ,GAND;;AAQA,QAAMI,mBAAmB,GAAIT,CAAD,IAAO;AAC/B,UAAM;AAAEK,MAAAA;AAAF,QAAYL,CAAC,CAACU,MAApB;;AACA,QAAIL,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACpBC,MAAAA,eAAe,CAACH,KAAK,CAAC,CAAD,CAAN,CAAf;AACH;AACJ,GALD;;AAOA,QAAMG,eAAe,GAAGG,IAAI,IAAI;AAC5BjB,IAAAA,YAAY,CAACiB,IAAD,CAAZ;AACAtB,IAAAA,WAAW,CAACuB,GAAG,CAACC,eAAJ,CAAoBF,IAApB,CAAD,EAA4Bf,aAA5B,CAAX;AACH,GAHD;;AAKA,QAAMkB,kBAAkB,GAAG,MAAM;AAC7BvB,IAAAA,cAAc,CAACwB,OAAf,CAAuBC,KAAvB;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGxB,SAAS,IAAIA,SAAS,CAACyB,IAAV,CAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,MAAiC,OAA9C,IAAyD1B,SAAS,CAACyB,IAAV,CAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,EAA6BC,OAA7B,CAAqC,KAArC,MAAgD,CAAC,CAAnI;;AAEA,MAAIzB,UAAU,IAAIH,mBAAmB,CAACuB,OAAtC,EAA+C;AAC3CvB,IAAAA,mBAAmB,CAACuB,OAApB,CAA4BM,SAA5B,GAAwC1B,UAAxC;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAO,MAAA,KAAK,EAAE;AAAC2B,QAAAA,OAAO,EAAE;AAAV,OAAd;AAAiC,MAAA,IAAI,EAAC,MAAtC;AAA6C,MAAA,GAAG,EAAE/B,cAAlD;AAAkE,MAAA,QAAQ,EAAEkB;AAA5E;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKQ,gBAAgB,gBACb;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEL,GAAG,CAACC,eAAJ,CAAoBpB,SAApB,CAAV;AAA0C,QAAA,GAAG,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,GAAG,EAAE8B,UAAV;AAAsB,QAAA,SAAS,EAAC,eAAhC;AAAgD,QAAA,OAAO,EAAET,kBAAzD;AAA6E,QAAA,GAAG,EAAC,aAAjF;AAA+F,QAAA,KAAK,EAAC,IAArG;AAA0G,QAAA,MAAM,EAAC;AAAjH;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADa,gBAMb;AACI,MAAA,SAAS,EAAG,oBAAmBjB,QAAQ,GAAG,UAAH,GAAgB,EAAG,EAD9D;AAEI,MAAA,OAAO,EAAEiB,kBAFb;AAGI,MAAA,UAAU,EAAEf,gBAHhB;AAII,MAAA,WAAW,EAAEG,WAJjB;AAKI,MAAA,WAAW,EAAEC,WALjB;AAMI,MAAA,MAAM,EAAEC,QANZ;AAAA,8BAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAWI;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAeI;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARR,eA6BI;AAAK,MAAA,SAAS,EAAG,iBAAgBT,UAAU,GAAG,EAAH,GAAQ,MAAO,EAA1D;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEH;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,GAAG,EAAEgC,YAAV;AAAwB,QAAA,SAAS,EAAC,iBAAlC;AAAoD,QAAA,OAAO,EAAEV,kBAA7D;AAAiF,QAAA,GAAG,EAAC,eAArF;AAAqG,QAAA,KAAK,EAAC,IAA3G;AAAgH,QAAA,MAAM,EAAC;AAAvH;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;GArFuBxB,M;;KAAAA,M","sourcesContent":["import \"./Images.css\"\nimport React, {useState, useRef} from \"react\";\nimport uploadIcon from \"./upload-solid.svg\"\nimport downloadIcon from \"./download-solid.svg\"\nimport {OptimizeSvg} from \"./OptimizeSvg\";\n\nexport default function Images() {\n    const fileInputField = useRef(null);\n    const outputFileContainer = useRef(null);\n    const [inputFile, setInputFile] = useState(null);\n    const [outputFile, setOutputFile] = useState(null);\n    const [dragging, setDragging] = useState(false);\n\n    const preventDefaultFn = (e) => {\n        e.preventDefault();\n    };\n\n    const onDragEnter = (e) => {\n        setDragging(true);\n    }\n\n    const onDragLeave = (e) => {\n        setDragging(false);\n    }\n\n    const fileDrop = (e) => {\n        e.preventDefault();\n        const files = e.dataTransfer.files;\n        if (files.length === 1) {\n            handleInputFile(files[0]);\n        }\n    };\n\n    const handleNewFileUpload = (e) => {\n        const { files } = e.target;\n        if (files.length === 1) {\n            handleInputFile(files[0]);\n        }\n    };\n\n    const handleInputFile = file => {\n        setInputFile(file);\n        OptimizeSvg(URL.createObjectURL(file), setOutputFile);\n    };\n\n    const handleUploadAction = () => {\n        fileInputField.current.click();\n    };\n\n    const didUploadSvgFile = inputFile && inputFile.type.split(\"/\")[0] === \"image\" && inputFile.type.split(\"/\")[1].indexOf(\"svg\") !== -1;\n\n    if (outputFile && outputFileContainer.current) {\n        outputFileContainer.current.innerHTML = outputFile;\n    }\n\n    return (\n        <div className=\"Images\">\n            <input style={{display: \"none\"}} type=\"file\" ref={fileInputField} onChange={handleNewFileUpload} />\n            {didUploadSvgFile ? \n                <div className=\"Images-input\">\n                    <img src={URL.createObjectURL(inputFile)} alt=\"input svg\"></img>\n                    <img src={uploadIcon} className=\"upload-button\" onClick={handleUploadAction} alt=\"upload file\" width=\"40\" height=\"40\"></img>\n                </div>\n                : \n                <div \n                    className={`file-upload-area ${dragging ? \"hovering\" : \"\"}`}\n                    onClick={handleUploadAction}\n                    onDragOver={preventDefaultFn}\n                    onDragEnter={onDragEnter}\n                    onDragLeave={onDragLeave}\n                    onDrop={fileDrop}\n                >\n                    <label>\n                        Drag and drop your files\n                    </label>\n                    <br/>\n                    <label>\n                        OR\n                    </label>\n                    <br/>\n                    <label>\n                        Click anywhere to choose from files\n                    </label>\n                </div>\n            }\n            <div className={`Images-output ${outputFile ? \"\" : \"hide\"}`}>\n                <div ref={outputFileContainer}></div>\n                <img src={downloadIcon} className=\"download-button\" onClick={handleUploadAction} alt=\"download file\" width=\"40\" height=\"40\"></img>\n            </div>\n        </div>\n    );\n} "]},"metadata":{},"sourceType":"module"}