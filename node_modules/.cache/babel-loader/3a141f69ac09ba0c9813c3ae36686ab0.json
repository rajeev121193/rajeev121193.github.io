{"ast":null,"code":"// Snap.svg 0.5.0\n//\n// Copyright (c) 2013 – 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// build: 2017-02-06\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n(function (glob) {\n  var version = \"0.5.0\",\n      has = \"hasOwnProperty\",\n      separator = /[\\.\\/]/,\n      comaseparator = /\\s*,\\s*/,\n      wildcard = \"*\",\n      fun = function () {},\n      numsort = function (a, b) {\n    return a - b;\n  },\n      current_event,\n      stop,\n      events = {\n    n: {}\n  },\n      firstDefined = function () {\n    for (var i = 0, ii = this.length; i < ii; i++) {\n      if (typeof this[i] != \"undefined\") {\n        return this[i];\n      }\n    }\n  },\n      lastDefined = function () {\n    var i = this.length;\n\n    while (--i) {\n      if (typeof this[i] != \"undefined\") {\n        return this[i];\n      }\n    }\n  },\n      objtos = Object.prototype.toString,\n      Str = String,\n      isArray = Array.isArray || function (ar) {\n    return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n  };\n  /*\\\n   * eve\n   [ method ]\n    * Fires event with given `name`, given scope and other parameters.\n    > Arguments\n    - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n   - scope (object) context for the event handlers\n   - varargs (...) the rest of arguments will be sent to event handlers\n    = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n  \\*/\n\n\n  eve = function (name, scope) {\n    var e = events,\n        oldstop = stop,\n        args = Array.prototype.slice.call(arguments, 2),\n        listeners = eve.listeners(name),\n        z = 0,\n        f = false,\n        l,\n        indexed = [],\n        queue = {},\n        out = [],\n        ce = current_event,\n        errors = [];\n    out.firstDefined = firstDefined;\n    out.lastDefined = lastDefined;\n    current_event = name;\n    stop = 0;\n\n    for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n      indexed.push(listeners[i].zIndex);\n\n      if (listeners[i].zIndex < 0) {\n        queue[listeners[i].zIndex] = listeners[i];\n      }\n    }\n\n    indexed.sort(numsort);\n\n    while (indexed[z] < 0) {\n      l = queue[indexed[z++]];\n      out.push(l.apply(scope, args));\n\n      if (stop) {\n        stop = oldstop;\n        return out;\n      }\n    }\n\n    for (i = 0; i < ii; i++) {\n      l = listeners[i];\n\n      if (\"zIndex\" in l) {\n        if (l.zIndex == indexed[z]) {\n          out.push(l.apply(scope, args));\n\n          if (stop) {\n            break;\n          }\n\n          do {\n            z++;\n            l = queue[indexed[z]];\n            l && out.push(l.apply(scope, args));\n\n            if (stop) {\n              break;\n            }\n          } while (l);\n        } else {\n          queue[l.zIndex] = l;\n        }\n      } else {\n        out.push(l.apply(scope, args));\n\n        if (stop) {\n          break;\n        }\n      }\n    }\n\n    stop = oldstop;\n    current_event = ce;\n    return out;\n  }; // Undocumented. Debug only.\n\n\n  eve._events = events;\n  /*\\\n   * eve.listeners\n   [ method ]\n    * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n    > Arguments\n    - name (string) name of the event, dot (`.`) or slash (`/`) separated\n    = (array) array of event handlers\n  \\*/\n\n  eve.listeners = function (name) {\n    var names = isArray(name) ? name : name.split(separator),\n        e = events,\n        item,\n        items,\n        k,\n        i,\n        ii,\n        j,\n        jj,\n        nes,\n        es = [e],\n        out = [];\n\n    for (i = 0, ii = names.length; i < ii; i++) {\n      nes = [];\n\n      for (j = 0, jj = es.length; j < jj; j++) {\n        e = es[j].n;\n        items = [e[names[i]], e[wildcard]];\n        k = 2;\n\n        while (k--) {\n          item = items[k];\n\n          if (item) {\n            nes.push(item);\n            out = out.concat(item.f || []);\n          }\n        }\n      }\n\n      es = nes;\n    }\n\n    return out;\n  };\n  /*\\\n   * eve.separator\n   [ method ]\n    * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n   * here. Be aware that if you pass a string longer than one character it will be treated as\n   * a list of characters.\n    - separator (string) new separator. Empty string resets to default: `.` or `/`.\n  \\*/\n\n\n  eve.separator = function (sep) {\n    if (sep) {\n      sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n      sep = \"[\" + sep + \"]\";\n      separator = new RegExp(sep);\n    } else {\n      separator = /[\\.\\/]/;\n    }\n  };\n  /*\\\n   * eve.on\n   [ method ]\n   **\n   * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n   | eve.on(\"*.under.*\", f);\n   | eve(\"mouse.under.floor\"); // triggers f\n   * Use @eve to trigger the listener.\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   - name (array) if you don’t want to use separators, you can use array of strings\n   - f (function) event handler function\n   **\n   = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n   > Example:\n   | eve.on(\"mouse\", eatIt)(2);\n   | eve.on(\"mouse\", scream);\n   | eve.on(\"mouse\", catchIt)(1);\n   * This will ensure that `catchIt` function will be called before `eatIt`.\n   *\n   * If you want to put your handler before non-indexed handlers, specify a negative value.\n   * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n  \\*/\n\n\n  eve.on = function (name, f) {\n    if (typeof f != \"function\") {\n      return function () {};\n    }\n\n    var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\n    for (var i = 0, ii = names.length; i < ii; i++) {\n      (function (name) {\n        var names = isArray(name) ? name : Str(name).split(separator),\n            e = events,\n            exist;\n\n        for (var i = 0, ii = names.length; i < ii; i++) {\n          e = e.n;\n          e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {\n            n: {}\n          });\n        }\n\n        e.f = e.f || [];\n\n        for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n          exist = true;\n          break;\n        }\n\n        !exist && e.f.push(f);\n      })(names[i]);\n    }\n\n    return function (zIndex) {\n      if (+zIndex == +zIndex) {\n        f.zIndex = +zIndex;\n      }\n    };\n  };\n  /*\\\n   * eve.f\n   [ method ]\n   **\n   * Returns function that will fire given event with optional arguments.\n   * Arguments that will be passed to the result function will be also\n   * concated to the list of final arguments.\n   | el.onclick = eve.f(\"click\", 1, 2);\n   | eve.on(\"click\", function (a, b, c) {\n   |     console.log(a, b, c); // 1, 2, [event object]\n   | });\n   > Arguments\n   - event (string) event name\n   - varargs (…) and any other arguments\n   = (function) possible event handler function\n  \\*/\n\n\n  eve.f = function (event) {\n    var attrs = [].slice.call(arguments, 1);\n    return function () {\n      eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n    };\n  };\n  /*\\\n   * eve.stop\n   [ method ]\n   **\n   * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n  \\*/\n\n\n  eve.stop = function () {\n    stop = 1;\n  };\n  /*\\\n   * eve.nt\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   > Arguments\n   **\n   - subname (string) #optional subname of the event\n   **\n   = (string) name of the event, if `subname` is not specified\n   * or\n   = (boolean) `true`, if current event’s name contains `subname`\n  \\*/\n\n\n  eve.nt = function (subname) {\n    var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n\n    if (subname) {\n      return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n    }\n\n    return cur;\n  };\n  /*\\\n   * eve.nts\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   **\n   = (array) names of the event\n  \\*/\n\n\n  eve.nts = function () {\n    return isArray(current_event) ? current_event : current_event.split(separator);\n  };\n  /*\\\n   * eve.off\n   [ method ]\n   **\n   * Removes given function from the list of event listeners assigned to given name.\n   * If no arguments specified all the events will be cleared.\n   **\n   > Arguments\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n  \\*/\n\n  /*\\\n   * eve.unbind\n   [ method ]\n   **\n   * See @eve.off\n  \\*/\n\n\n  eve.off = eve.unbind = function (name, f) {\n    if (!name) {\n      eve._events = events = {\n        n: {}\n      };\n      return;\n    }\n\n    var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\n    if (names.length > 1) {\n      for (var i = 0, ii = names.length; i < ii; i++) {\n        eve.off(names[i], f);\n      }\n\n      return;\n    }\n\n    names = isArray(name) ? name : Str(name).split(separator);\n    var e,\n        key,\n        splice,\n        i,\n        ii,\n        j,\n        jj,\n        cur = [events],\n        inodes = [];\n\n    for (i = 0, ii = names.length; i < ii; i++) {\n      for (j = 0; j < cur.length; j += splice.length - 2) {\n        splice = [j, 1];\n        e = cur[j].n;\n\n        if (names[i] != wildcard) {\n          if (e[names[i]]) {\n            splice.push(e[names[i]]);\n            inodes.unshift({\n              n: e,\n              name: names[i]\n            });\n          }\n        } else {\n          for (key in e) if (e[has](key)) {\n            splice.push(e[key]);\n            inodes.unshift({\n              n: e,\n              name: key\n            });\n          }\n        }\n\n        cur.splice.apply(cur, splice);\n      }\n    }\n\n    for (i = 0, ii = cur.length; i < ii; i++) {\n      e = cur[i];\n\n      while (e.n) {\n        if (f) {\n          if (e.f) {\n            for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n              e.f.splice(j, 1);\n              break;\n            }\n\n            !e.f.length && delete e.f;\n          }\n\n          for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n            var funcs = e.n[key].f;\n\n            for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n              funcs.splice(j, 1);\n              break;\n            }\n\n            !funcs.length && delete e.n[key].f;\n          }\n        } else {\n          delete e.f;\n\n          for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n            delete e.n[key].f;\n          }\n        }\n\n        e = e.n;\n      }\n    } // prune inner nodes in path\n\n\n    prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n      e = inodes[i];\n\n      for (key in e.n[e.name].f) {\n        // not empty (has listeners)\n        continue prune;\n      }\n\n      for (key in e.n[e.name].n) {\n        // not empty (has children)\n        continue prune;\n      } // is empty\n\n\n      delete e.n[e.name];\n    }\n  };\n  /*\\\n   * eve.once\n   [ method ]\n   **\n   * Binds given event handler with a given name to only run once then unbind itself.\n   | eve.once(\"login\", f);\n   | eve(\"login\"); // triggers f\n   | eve(\"login\"); // no listeners\n   * Use @eve to trigger the listener.\n   **\n   > Arguments\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   = (function) same return function as @eve.on\n  \\*/\n\n\n  eve.once = function (name, f) {\n    var f2 = function () {\n      eve.off(name, f2);\n      return f.apply(this, arguments);\n    };\n\n    return eve.on(name, f2);\n  };\n  /*\\\n   * eve.version\n   [ property (string) ]\n   **\n   * Current version of the library.\n  \\*/\n\n\n  eve.version = version;\n\n  eve.toString = function () {\n    return \"You are running Eve \" + version;\n  };\n\n  typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () {\n    return eve;\n  }) : glob.eve = eve;\n})(this);\n\n(function (glob, factory) {\n  // AMD support\n  if (typeof define == \"function\" && define.amd) {\n    // Define as an anonymous module\n    define([\"eve\"], function (eve) {\n      return factory(glob, eve);\n    });\n  } else if (typeof exports != \"undefined\") {\n    // Next for Node.js or CommonJS\n    var eve = require(\"eve\");\n\n    module.exports = factory(glob, eve);\n  } else {\n    // Browser globals (glob is window)\n    // Snap adds itself to window\n    factory(glob, glob.eve);\n  }\n})(window || this, function (window, eve) {\n  // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  var mina = function (eve) {\n    var animations = {},\n        requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      setTimeout(callback, 16, new Date().getTime());\n      return true;\n    },\n        requestID,\n        isArray = Array.isArray || function (a) {\n      return a instanceof Array || Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n        idgen = 0,\n        idprefix = \"M\" + (+new Date()).toString(36),\n        ID = function () {\n      return idprefix + (idgen++).toString(36);\n    },\n        diff = function (a, b, A, B) {\n      if (isArray(a)) {\n        res = [];\n\n        for (var i = 0, ii = a.length; i < ii; i++) {\n          res[i] = diff(a[i], b, A[i], B);\n        }\n\n        return res;\n      }\n\n      var dif = (A - a) / (B - b);\n      return function (bb) {\n        return a + dif * (bb - b);\n      };\n    },\n        timer = Date.now || function () {\n      return +new Date();\n    },\n        sta = function (val) {\n      var a = this;\n\n      if (val == null) {\n        return a.s;\n      }\n\n      var ds = a.s - val;\n      a.b += a.dur * ds;\n      a.B += a.dur * ds;\n      a.s = val;\n    },\n        speed = function (val) {\n      var a = this;\n\n      if (val == null) {\n        return a.spd;\n      }\n\n      a.spd = val;\n    },\n        duration = function (val) {\n      var a = this;\n\n      if (val == null) {\n        return a.dur;\n      }\n\n      a.s = a.s * val / a.dur;\n      a.dur = val;\n    },\n        stopit = function () {\n      var a = this;\n      delete animations[a.id];\n      a.update();\n      eve(\"mina.stop.\" + a.id, a);\n    },\n        pause = function () {\n      var a = this;\n\n      if (a.pdif) {\n        return;\n      }\n\n      delete animations[a.id];\n      a.update();\n      a.pdif = a.get() - a.b;\n    },\n        resume = function () {\n      var a = this;\n\n      if (!a.pdif) {\n        return;\n      }\n\n      a.b = a.get() - a.pdif;\n      delete a.pdif;\n      animations[a.id] = a;\n      frame();\n    },\n        update = function () {\n      var a = this,\n          res;\n\n      if (isArray(a.start)) {\n        res = [];\n\n        for (var j = 0, jj = a.start.length; j < jj; j++) {\n          res[j] = +a.start[j] + (a.end[j] - a.start[j]) * a.easing(a.s);\n        }\n      } else {\n        res = +a.start + (a.end - a.start) * a.easing(a.s);\n      }\n\n      a.set(res);\n    },\n        frame = function (timeStamp) {\n      // Manual invokation?\n      if (!timeStamp) {\n        // Frame loop stopped?\n        if (!requestID) {\n          // Start frame loop...\n          requestID = requestAnimFrame(frame);\n        }\n\n        return;\n      }\n\n      var len = 0;\n\n      for (var i in animations) if (animations.hasOwnProperty(i)) {\n        var a = animations[i],\n            b = a.get(),\n            res;\n        len++;\n        a.s = (b - a.b) / (a.dur / a.spd);\n\n        if (a.s >= 1) {\n          delete animations[i];\n          a.s = 1;\n          len--;\n\n          (function (a) {\n            setTimeout(function () {\n              eve(\"mina.finish.\" + a.id, a);\n            });\n          })(a);\n        }\n\n        a.update();\n      }\n\n      requestID = len ? requestAnimFrame(frame) : false;\n    },\n\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n      var anim = {\n        id: ID(),\n        start: a,\n        end: A,\n        b: b,\n        s: 0,\n        dur: B - b,\n        spd: 1,\n        get: get,\n        set: set,\n        easing: easing || mina.linear,\n        status: sta,\n        speed: speed,\n        duration: duration,\n        stop: stopit,\n        pause: pause,\n        resume: resume,\n        update: update\n      };\n      animations[anim.id] = anim;\n      var len = 0,\n          i;\n\n      for (i in animations) if (animations.hasOwnProperty(i)) {\n        len++;\n\n        if (len == 2) {\n          break;\n        }\n      }\n\n      len == 1 && frame();\n      return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n\n\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n\n    mina.getById = function (id) {\n      return animations[id] || null;\n    };\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.linear = function (n) {\n      return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.easeout = function (n) {\n      return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.easein = function (n) {\n      return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.easeinout = function (n) {\n      if (n == 1) {\n        return 1;\n      }\n\n      if (n == 0) {\n        return 0;\n      }\n\n      var q = .48 - n / 1.04,\n          Q = Math.sqrt(.1734 + q * q),\n          x = Q - q,\n          X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n          y = -Q - q,\n          Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n          t = X + Y + .5;\n      return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.backin = function (n) {\n      if (n == 1) {\n        return 1;\n      }\n\n      var s = 1.70158;\n      return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.backout = function (n) {\n      if (n == 0) {\n        return 0;\n      }\n\n      n = n - 1;\n      var s = 1.70158;\n      return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.elastic = function (n) {\n      if (n == !!n) {\n        return n;\n      }\n\n      return Math.pow(2, -10 * n) * Math.sin((n - .075) * (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n\n\n    mina.bounce = function (n) {\n      var s = 7.5625,\n          p = 2.75,\n          l;\n\n      if (n < 1 / p) {\n        l = s * n * n;\n      } else {\n        if (n < 2 / p) {\n          n -= 1.5 / p;\n          l = s * n * n + .75;\n        } else {\n          if (n < 2.5 / p) {\n            n -= 2.25 / p;\n            l = s * n * n + .9375;\n          } else {\n            n -= 2.625 / p;\n            l = s * n * n + .984375;\n          }\n        }\n      }\n\n      return l;\n    };\n\n    window.mina = mina;\n    return mina;\n  }(typeof eve == \"undefined\" ? function () {} : eve); // Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n\n  var Snap = function (root) {\n    Snap.version = \"0.5.1\";\n    /*\\\n     * Snap\n     [ method ]\n     **\n     * Creates a drawing surface or wraps existing SVG element.\n     **\n     - width (number|string) width of surface\n     - height (number|string) height of surface\n     * or\n     - DOM (SVGElement) element to be wrapped into Snap structure\n     * or\n     - array (array) array of elements (will return set of elements)\n     * or\n     - query (string) CSS query selector\n     = (object) @Element\n    \\*/\n\n    function Snap(w, h) {\n      if (w) {\n        if (w.nodeType) {\n          return wrap(w);\n        }\n\n        if (is(w, \"array\") && Snap.set) {\n          return Snap.set.apply(Snap, w);\n        }\n\n        if (w instanceof Element) {\n          return w;\n        }\n\n        if (h == null) {\n          // try {\n          w = glob.doc.querySelector(String(w));\n          return wrap(w); // } catch (e) {\n          // return null;\n          // }\n        }\n      }\n\n      w = w == null ? \"100%\" : w;\n      h = h == null ? \"100%\" : h;\n      return new Paper(w, h);\n    }\n\n    Snap.toString = function () {\n      return \"Snap v\" + this.version;\n    };\n\n    Snap._ = {};\n    var glob = {\n      win: root.window,\n      doc: root.window.document\n    };\n    Snap._.glob = glob;\n\n    var has = \"hasOwnProperty\",\n        Str = String,\n        toFloat = parseFloat,\n        toInt = parseInt,\n        math = Math,\n        mmax = math.max,\n        mmin = math.min,\n        abs = math.abs,\n        pow = math.pow,\n        PI = math.PI,\n        round = math.round,\n        E = \"\",\n        S = \" \",\n        objectToString = Object.prototype.toString,\n        ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n        colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n        bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n        separator = Snap._.separator = /[,\\s]+/,\n        whitespace = /[\\s]/g,\n        commaSpaces = /[\\s]*,[\\s]*/,\n        hsrg = {\n      hs: 1,\n      rg: 1\n    },\n        pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n        tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n        pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n        idgen = 0,\n        idprefix = \"S\" + (+new Date()).toString(36),\n        ID = function (el) {\n      return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n        xlink = \"http://www.w3.org/1999/xlink\",\n        xmlns = \"http://www.w3.org/2000/svg\",\n        hub = {},\n\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n      return \"url('#\" + url + \"')\";\n    };\n\n    function $(el, attr) {\n      if (attr) {\n        if (el == \"#text\") {\n          el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n\n        if (el == \"#comment\") {\n          el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n\n        if (typeof el == \"string\") {\n          el = $(el);\n        }\n\n        if (typeof attr == \"string\") {\n          if (el.nodeType == 1) {\n            if (attr.substring(0, 6) == \"xlink:\") {\n              return el.getAttributeNS(xlink, attr.substring(6));\n            }\n\n            if (attr.substring(0, 4) == \"xml:\") {\n              return el.getAttributeNS(xmlns, attr.substring(4));\n            }\n\n            return el.getAttribute(attr);\n          } else if (attr == \"text\") {\n            return el.nodeValue;\n          } else {\n            return null;\n          }\n        }\n\n        if (el.nodeType == 1) {\n          for (var key in attr) if (attr[has](key)) {\n            var val = Str(attr[key]);\n\n            if (val) {\n              if (key.substring(0, 6) == \"xlink:\") {\n                el.setAttributeNS(xlink, key.substring(6), val);\n              } else if (key.substring(0, 4) == \"xml:\") {\n                el.setAttributeNS(xmlns, key.substring(4), val);\n              } else {\n                el.setAttribute(key, val);\n              }\n            } else {\n              el.removeAttribute(key);\n            }\n          }\n        } else if (\"text\" in attr) {\n          el.nodeValue = attr.text;\n        }\n      } else {\n        el = glob.doc.createElementNS(xmlns, el);\n      }\n\n      return el;\n    }\n\n    Snap._.$ = $;\n    Snap._.id = ID;\n\n    function getAttrs(el) {\n      var attrs = el.attributes,\n          name,\n          out = {};\n\n      for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n          name = \"xlink:\";\n        } else {\n          name = \"\";\n        }\n\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n      }\n\n      return out;\n    }\n\n    function is(o, type) {\n      type = Str.prototype.toLowerCase.call(type);\n\n      if (type == \"finite\") {\n        return isFinite(o);\n      }\n\n      if (type == \"array\" && (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n      }\n\n      return type == \"null\" && o === null || type == typeof o && o !== null || type == \"object\" && o === Object(o) || objectToString.call(o).slice(8, -1).toLowerCase() == type;\n    }\n    /*\\\n     * Snap.format\n     [ method ]\n     **\n     * Replaces construction of type `{<name>}` to the corresponding argument\n     **\n     - token (string) string to format\n     - json (object) object which properties are used as a replacement\n     = (string) formatted string\n     > Usage\n     | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n     | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n     |     x: 10,\n     |     y: 20,\n     |     dim: {\n     |         width: 40,\n     |         height: 50,\n     |         \"negative width\": -40\n     |     }\n     | }));\n    \\*/\n\n\n    Snap.format = function () {\n      var tokenRegex = /\\{([^\\}]+)\\}/g,\n          objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,\n          // matches .xxxxx or [\"xxxxx\"] to run over object properties\n      replacer = function (all, key, obj) {\n        var res = obj;\n        key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n          name = name || quotedName;\n\n          if (res) {\n            if (name in res) {\n              res = res[name];\n            }\n\n            typeof res == \"function\" && isFunc && (res = res());\n          }\n        });\n        res = (res == null || res == obj ? all : res) + \"\";\n        return res;\n      };\n\n      return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n          return replacer(all, key, obj);\n        });\n      };\n    }();\n\n    function clone(obj) {\n      if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n      }\n\n      var res = new obj.constructor();\n\n      for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n      }\n\n      return res;\n    }\n\n    Snap._.clone = clone;\n\n    function repush(array, item) {\n      for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n      }\n    }\n\n    function cacher(f, scope, postprocessor) {\n      function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n\n        if (cache[has](args)) {\n          repush(count, args);\n          return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n      }\n\n      return newf;\n    }\n\n    Snap._.cacher = cacher;\n\n    function angle(x1, y1, x2, y2, x3, y3) {\n      if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n\n        if (!x && !y) {\n          return 0;\n        }\n\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n      } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n      }\n    }\n\n    function rad(deg) {\n      return deg % 360 * PI / 180;\n    }\n\n    function deg(rad) {\n      return rad * 180 / PI % 360;\n    }\n\n    function x_y() {\n      return this.x + S + this.y;\n    }\n\n    function x_y_w_h() {\n      return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n    }\n    /*\\\n     * Snap.rad\n     [ method ]\n     **\n     * Transform angle to radians\n     - deg (number) angle in degrees\n     = (number) angle in radians\n    \\*/\n\n\n    Snap.rad = rad;\n    /*\\\n     * Snap.deg\n     [ method ]\n     **\n     * Transform angle to degrees\n     - rad (number) angle in radians\n     = (number) angle in degrees\n    \\*/\n\n    Snap.deg = deg;\n    /*\\\n     * Snap.sin\n     [ method ]\n     **\n     * Equivalent to `Math.sin()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) sin\n    \\*/\n\n    Snap.sin = function (angle) {\n      return math.sin(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.tan\n     [ method ]\n     **\n     * Equivalent to `Math.tan()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) tan\n    \\*/\n\n\n    Snap.tan = function (angle) {\n      return math.tan(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.cos\n     [ method ]\n     **\n     * Equivalent to `Math.cos()` only works with degrees, not radians.\n     - angle (number) angle in degrees\n     = (number) cos\n    \\*/\n\n\n    Snap.cos = function (angle) {\n      return math.cos(Snap.rad(angle));\n    };\n    /*\\\n     * Snap.asin\n     [ method ]\n     **\n     * Equivalent to `Math.asin()` only works with degrees, not radians.\n     - num (number) value\n     = (number) asin in degrees\n    \\*/\n\n\n    Snap.asin = function (num) {\n      return Snap.deg(math.asin(num));\n    };\n    /*\\\n     * Snap.acos\n     [ method ]\n     **\n     * Equivalent to `Math.acos()` only works with degrees, not radians.\n     - num (number) value\n     = (number) acos in degrees\n    \\*/\n\n\n    Snap.acos = function (num) {\n      return Snap.deg(math.acos(num));\n    };\n    /*\\\n     * Snap.atan\n     [ method ]\n     **\n     * Equivalent to `Math.atan()` only works with degrees, not radians.\n     - num (number) value\n     = (number) atan in degrees\n    \\*/\n\n\n    Snap.atan = function (num) {\n      return Snap.deg(math.atan(num));\n    };\n    /*\\\n     * Snap.atan2\n     [ method ]\n     **\n     * Equivalent to `Math.atan2()` only works with degrees, not radians.\n     - num (number) value\n     = (number) atan2 in degrees\n    \\*/\n\n\n    Snap.atan2 = function (num) {\n      return Snap.deg(math.atan2(num));\n    };\n    /*\\\n     * Snap.angle\n     [ method ]\n     **\n     * Returns an angle between two or three points\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     - x3 (number) #optional x coord of third point\n     - y3 (number) #optional y coord of third point\n     = (number) angle in degrees\n    \\*/\n\n\n    Snap.angle = angle;\n    /*\\\n     * Snap.len\n     [ method ]\n     **\n     * Returns distance between two points\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     = (number) distance\n    \\*/\n\n    Snap.len = function (x1, y1, x2, y2) {\n      return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n    };\n    /*\\\n     * Snap.len2\n     [ method ]\n     **\n     * Returns squared distance between two points\n     - x1 (number) x coord of first point\n     - y1 (number) y coord of first point\n     - x2 (number) x coord of second point\n     - y2 (number) y coord of second point\n     = (number) distance\n    \\*/\n\n\n    Snap.len2 = function (x1, y1, x2, y2) {\n      return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    };\n    /*\\\n     * Snap.closestPoint\n     [ method ]\n     **\n     * Returns closest point to a given one on a given path.\n     - path (Element) path element\n     - x (number) x coord of a point\n     - y (number) y coord of a point\n     = (object) in format\n     {\n        x (number) x coord of the point on the path\n        y (number) y coord of the point on the path\n        length (number) length of the path to the point\n        distance (number) distance from the given point to the path\n     }\n    \\*/\n    // Copied from http://bl.ocks.org/mbostock/8027637\n\n\n    Snap.closestPoint = function (path, x, y) {\n      function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n      }\n\n      var pathNode = path.node,\n          pathLength = pathNode.getTotalLength(),\n          precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n          best,\n          bestLength,\n          bestDistance = Infinity; // linear scan for coarse approximation\n\n      for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n          best = scan;\n          bestLength = scanLength;\n          bestDistance = scanDistance;\n        }\n      } // binary search for precise estimate\n\n\n      precision *= .5;\n\n      while (precision > .5) {\n        var before, after, beforeLength, afterLength, beforeDistance, afterDistance;\n\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n          best = before;\n          bestLength = beforeLength;\n          bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n          best = after;\n          bestLength = afterLength;\n          bestDistance = afterDistance;\n        } else {\n          precision *= .5;\n        }\n      }\n\n      best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n      };\n      return best;\n    };\n    /*\\\n     * Snap.is\n     [ method ]\n     **\n     * Handy replacement for the `typeof` operator\n     - o (…) any object or primitive\n     - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n     = (boolean) `true` if given value is of given type\n    \\*/\n\n\n    Snap.is = is;\n    /*\\\n     * Snap.snapTo\n     [ method ]\n     **\n     * Snaps given value to given grid\n     - values (array|number) given array of values or step of the grid\n     - value (number) value to adjust\n     - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n     = (number) adjusted value\n    \\*/\n\n    Snap.snapTo = function (values, value, tolerance) {\n      tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n\n      if (is(values, \"array\")) {\n        var i = values.length;\n\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n          return values[i];\n        }\n      } else {\n        values = +values;\n        var rem = value % values;\n\n        if (rem < tolerance) {\n          return value - rem;\n        }\n\n        if (rem > values - tolerance) {\n          return value - rem + values;\n        }\n      }\n\n      return value;\n    }; // Colour\n\n    /*\\\n     * Snap.getRGB\n     [ method ]\n     **\n     * Parses color string as RGB object\n     - color (string) color string in one of the following formats:\n     # <ul>\n     #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n     #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n     #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n     #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n     #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n     #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n     #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n     #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n     #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n     # </ul>\n     * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) true if string can't be parsed\n     o }\n    \\*/\n\n\n    Snap.getRGB = cacher(function (colour) {\n      if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {\n          r: -1,\n          g: -1,\n          b: -1,\n          hex: \"none\",\n          error: 1,\n          toString: rgbtoString\n        };\n      }\n\n      if (colour == \"none\") {\n        return {\n          r: -1,\n          g: -1,\n          b: -1,\n          hex: \"none\",\n          toString: rgbtoString\n        };\n      }\n\n      !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n\n      if (!colour) {\n        return {\n          r: -1,\n          g: -1,\n          b: -1,\n          hex: \"none\",\n          error: 1,\n          toString: rgbtoString\n        };\n      }\n\n      var res,\n          red,\n          green,\n          blue,\n          opacity,\n          t,\n          values,\n          rgb = colour.match(colourRegExp);\n\n      if (rgb) {\n        if (rgb[2]) {\n          blue = toInt(rgb[2].substring(5), 16);\n          green = toInt(rgb[2].substring(3, 5), 16);\n          red = toInt(rgb[2].substring(1, 3), 16);\n        }\n\n        if (rgb[3]) {\n          blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n          green = toInt((t = rgb[3].charAt(2)) + t, 16);\n          red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n\n        if (rgb[4]) {\n          values = rgb[4].split(commaSpaces);\n          red = toFloat(values[0]);\n          values[0].slice(-1) == \"%\" && (red *= 2.55);\n          green = toFloat(values[1]);\n          values[1].slice(-1) == \"%\" && (green *= 2.55);\n          blue = toFloat(values[2]);\n          values[2].slice(-1) == \"%\" && (blue *= 2.55);\n          rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n          values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n\n        if (rgb[5]) {\n          values = rgb[5].split(commaSpaces);\n          red = toFloat(values[0]);\n          values[0].slice(-1) == \"%\" && (red /= 100);\n          green = toFloat(values[1]);\n          values[1].slice(-1) == \"%\" && (green /= 100);\n          blue = toFloat(values[2]);\n          values[2].slice(-1) == \"%\" && (blue /= 100);\n          (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n          rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n          values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n          return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n\n        if (rgb[6]) {\n          values = rgb[6].split(commaSpaces);\n          red = toFloat(values[0]);\n          values[0].slice(-1) == \"%\" && (red /= 100);\n          green = toFloat(values[1]);\n          values[1].slice(-1) == \"%\" && (green /= 100);\n          blue = toFloat(values[2]);\n          values[2].slice(-1) == \"%\" && (blue /= 100);\n          (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n          rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n          values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n          return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {\n          r: red,\n          g: green,\n          b: blue,\n          toString: rgbtoString\n        };\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n      }\n\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        error: 1,\n        toString: rgbtoString\n      };\n    }, Snap);\n    /*\\\n     * Snap.hsb\n     [ method ]\n     **\n     * Converts HSB values to a hex representation of the color\n     - h (number) hue\n     - s (number) saturation\n     - b (number) value or brightness\n     = (string) hex representation of the color\n    \\*/\n\n    Snap.hsb = cacher(function (h, s, b) {\n      return Snap.hsb2rgb(h, s, b).hex;\n    });\n    /*\\\n     * Snap.hsl\n     [ method ]\n     **\n     * Converts HSL values to a hex representation of the color\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (string) hex representation of the color\n    \\*/\n\n    Snap.hsl = cacher(function (h, s, l) {\n      return Snap.hsl2rgb(h, s, l).hex;\n    });\n    /*\\\n     * Snap.rgb\n     [ method ]\n     **\n     * Converts RGB values to a hex representation of the color\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (string) hex representation of the color\n    \\*/\n\n    Snap.rgb = cacher(function (r, g, b, o) {\n      if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n      }\n\n      return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n    });\n\n    var toHex = function (color) {\n      var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n          red = \"rgb(255, 0, 0)\";\n      toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n          return red;\n        }\n\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n      });\n      return toHex(color);\n    },\n        hsbtoString = function () {\n      return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n    },\n        hsltoString = function () {\n      return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n    },\n        rgbtoString = function () {\n      return this.opacity == 1 || this.opacity == null ? this.hex : \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n    },\n        prepareRGB = function (r, g, b) {\n      if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n      }\n\n      if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n      }\n\n      if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n      }\n\n      return [r, g, b];\n    },\n        packageRGB = function (r, g, b, o) {\n      r = math.round(r * 255);\n      g = math.round(g * 255);\n      b = math.round(b * 255);\n      var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n      };\n      is(o, \"finite\") && (rgb.opacity = o);\n      return rgb;\n    };\n    /*\\\n     * Snap.color\n     [ method ]\n     **\n     * Parses the color string and returns an object featuring the color's component values\n     - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n     = (object) Combined RGB/HSB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••,\n     o     error (boolean) `true` if string can't be parsed,\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     v (number) value (brightness),\n     o     l (number) lightness\n     o }\n    \\*/\n\n\n    Snap.color = function (clr) {\n      var rgb;\n\n      if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n      } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n      } else {\n        if (is(clr, \"string\")) {\n          clr = Snap.getRGB(clr);\n        }\n\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n          rgb = Snap.rgb2hsl(clr);\n          clr.h = rgb.h;\n          clr.s = rgb.s;\n          clr.l = rgb.l;\n          rgb = Snap.rgb2hsb(clr);\n          clr.v = rgb.b;\n        } else {\n          clr = {\n            hex: \"none\"\n          };\n          clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n          clr.error = 1;\n        }\n      }\n\n      clr.toString = rgbtoString;\n      return clr;\n    };\n    /*\\\n     * Snap.hsb2rgb\n     [ method ]\n     **\n     * Converts HSB values to an RGB object\n     - h (number) hue\n     - s (number) saturation\n     - v (number) value or brightness\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n\n\n    Snap.hsb2rgb = function (h, s, v, o) {\n      if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n      }\n\n      h *= 360;\n      var R, G, B, X, C;\n      h = h % 360 / 60;\n      C = v * s;\n      X = C * (1 - abs(h % 2 - 1));\n      R = G = B = v - C;\n      h = ~~h;\n      R += [C, X, 0, 0, X, C][h];\n      G += [X, C, C, X, 0, 0][h];\n      B += [0, 0, X, C, C, X][h];\n      return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Snap.hsl2rgb\n     [ method ]\n     **\n     * Converts HSL values to an RGB object\n     - h (number) hue\n     - s (number) saturation\n     - l (number) luminosity\n     = (object) RGB object in the following format:\n     o {\n     o     r (number) red,\n     o     g (number) green,\n     o     b (number) blue,\n     o     hex (string) color in HTML/CSS format: #••••••\n     o }\n    \\*/\n\n\n    Snap.hsl2rgb = function (h, s, l, o) {\n      if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      }\n\n      if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n      }\n\n      h *= 360;\n      var R, G, B, X, C;\n      h = h % 360 / 60;\n      C = 2 * s * (l < .5 ? l : 1 - l);\n      X = C * (1 - abs(h % 2 - 1));\n      R = G = B = l - C / 2;\n      h = ~~h;\n      R += [C, X, 0, 0, X, C][h];\n      G += [X, C, C, X, 0, 0][h];\n      B += [0, 0, X, C, C, X][h];\n      return packageRGB(R, G, B, o);\n    };\n    /*\\\n     * Snap.rgb2hsb\n     [ method ]\n     **\n     * Converts RGB values to an HSB object\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSB object in the following format:\n     o {\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     b (number) brightness\n     o }\n    \\*/\n\n\n    Snap.rgb2hsb = function (r, g, b) {\n      b = prepareRGB(r, g, b);\n      r = b[0];\n      g = b[1];\n      b = b[2];\n      var H, S, V, C;\n      V = mmax(r, g, b);\n      C = V - mmin(r, g, b);\n      H = C == 0 ? null : V == r ? (g - b) / C : V == g ? (b - r) / C + 2 : (r - g) / C + 4;\n      H = (H + 360) % 6 * 60 / 360;\n      S = C == 0 ? 0 : C / V;\n      return {\n        h: H,\n        s: S,\n        b: V,\n        toString: hsbtoString\n      };\n    };\n    /*\\\n     * Snap.rgb2hsl\n     [ method ]\n     **\n     * Converts RGB values to an HSL object\n     - r (number) red\n     - g (number) green\n     - b (number) blue\n     = (object) HSL object in the following format:\n     o {\n     o     h (number) hue,\n     o     s (number) saturation,\n     o     l (number) luminosity\n     o }\n    \\*/\n\n\n    Snap.rgb2hsl = function (r, g, b) {\n      b = prepareRGB(r, g, b);\n      r = b[0];\n      g = b[1];\n      b = b[2];\n      var H, S, L, M, m, C;\n      M = mmax(r, g, b);\n      m = mmin(r, g, b);\n      C = M - m;\n      H = C == 0 ? null : M == r ? (g - b) / C : M == g ? (b - r) / C + 2 : (r - g) / C + 4;\n      H = (H + 360) % 6 * 60 / 360;\n      L = (M + m) / 2;\n      S = C == 0 ? 0 : L < .5 ? C / (2 * L) : C / (2 - 2 * L);\n      return {\n        h: H,\n        s: S,\n        l: L,\n        toString: hsltoString\n      };\n    }; // Transformations\n\n    /*\\\n     * Snap.parsePathString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given path string into an array of arrays of path segments\n     - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n     = (array) array of segments\n    \\*/\n\n\n    Snap.parsePathString = function (pathString) {\n      if (!pathString) {\n        return null;\n      }\n\n      var pth = Snap.path(pathString);\n\n      if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n      }\n\n      var paramCounts = {\n        a: 7,\n        c: 6,\n        o: 2,\n        h: 1,\n        l: 2,\n        m: 2,\n        r: 4,\n        q: 4,\n        s: 4,\n        t: 2,\n        v: 1,\n        u: 3,\n        z: 0\n      },\n          data = [];\n\n      if (is(pathString, \"array\") && is(pathString[0], \"array\")) {\n        // rough assumption\n        data = Snap.path.clone(pathString);\n      }\n\n      if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n          var params = [],\n              name = b.toLowerCase();\n          c.replace(pathValues, function (a, b) {\n            b && params.push(+b);\n          });\n\n          if (name == \"m\" && params.length > 2) {\n            data.push([b].concat(params.splice(0, 2)));\n            name = \"l\";\n            b = b == \"m\" ? \"l\" : \"L\";\n          }\n\n          if (name == \"o\" && params.length == 1) {\n            data.push([b, params[0]]);\n          }\n\n          if (name == \"r\") {\n            data.push([b].concat(params));\n          } else while (params.length >= paramCounts[name]) {\n            data.push([b].concat(params.splice(0, paramCounts[name])));\n\n            if (!paramCounts[name]) {\n              break;\n            }\n          }\n        });\n      }\n\n      data.toString = Snap.path.toString;\n      pth.arr = Snap.path.clone(data);\n      return data;\n    };\n    /*\\\n     * Snap.parseTransformString\n     [ method ]\n     **\n     * Utility method\n     **\n     * Parses given transform string into an array of transformations\n     - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n     = (array) array of transformations\n    \\*/\n\n\n    var parseTransformString = Snap.parseTransformString = function (TString) {\n      if (!TString) {\n        return null;\n      }\n\n      var paramCounts = {\n        r: 3,\n        s: 4,\n        t: 2,\n        m: 6\n      },\n          data = [];\n\n      if (is(TString, \"array\") && is(TString[0], \"array\")) {\n        // rough assumption\n        data = Snap.path.clone(TString);\n      }\n\n      if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n          var params = [],\n              name = b.toLowerCase();\n          c.replace(pathValues, function (a, b) {\n            b && params.push(+b);\n          });\n          data.push([b].concat(params));\n        });\n      }\n\n      data.toString = Snap.path.toString;\n      return data;\n    };\n\n    function svgTransform2string(tstr) {\n      var res = [];\n      tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n\n        if (name == \"rotate\" && params.length == 1) {\n          params.push(0, 0);\n        }\n\n        if (name == \"scale\") {\n          if (params.length > 2) {\n            params = params.slice(0, 2);\n          } else if (params.length == 2) {\n            params.push(0, 0);\n          }\n\n          if (params.length == 1) {\n            params.push(params[0], 0, 0);\n          }\n        }\n\n        if (name == \"skewX\") {\n          res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n          res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n          res.push([name.charAt(0)].concat(params));\n        }\n\n        return all;\n      });\n      return res;\n    }\n\n    Snap._.svgTransform2string = svgTransform2string;\n    Snap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\n\n    function transform2matrix(tstr, bbox) {\n      var tdata = parseTransformString(tstr),\n          m = new Snap.Matrix();\n\n      if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n          var t = tdata[i],\n              tlen = t.length,\n              command = Str(t[0]).toLowerCase(),\n              absolute = t[0] != command,\n              inver = absolute ? m.invert() : 0,\n              x1,\n              y1,\n              x2,\n              y2,\n              bb;\n\n          if (command == \"t\" && tlen == 2) {\n            m.translate(t[1], 0);\n          } else if (command == \"t\" && tlen == 3) {\n            if (absolute) {\n              x1 = inver.x(0, 0);\n              y1 = inver.y(0, 0);\n              x2 = inver.x(t[1], t[2]);\n              y2 = inver.y(t[1], t[2]);\n              m.translate(x2 - x1, y2 - y1);\n            } else {\n              m.translate(t[1], t[2]);\n            }\n          } else if (command == \"r\") {\n            if (tlen == 2) {\n              bb = bb || bbox;\n              m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n            } else if (tlen == 4) {\n              if (absolute) {\n                x2 = inver.x(t[2], t[3]);\n                y2 = inver.y(t[2], t[3]);\n                m.rotate(t[1], x2, y2);\n              } else {\n                m.rotate(t[1], t[2], t[3]);\n              }\n            }\n          } else if (command == \"s\") {\n            if (tlen == 2 || tlen == 3) {\n              bb = bb || bbox;\n              m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n            } else if (tlen == 4) {\n              if (absolute) {\n                x2 = inver.x(t[2], t[3]);\n                y2 = inver.y(t[2], t[3]);\n                m.scale(t[1], t[1], x2, y2);\n              } else {\n                m.scale(t[1], t[1], t[2], t[3]);\n              }\n            } else if (tlen == 5) {\n              if (absolute) {\n                x2 = inver.x(t[3], t[4]);\n                y2 = inver.y(t[3], t[4]);\n                m.scale(t[1], t[2], x2, y2);\n              } else {\n                m.scale(t[1], t[2], t[3], t[4]);\n              }\n            }\n          } else if (command == \"m\" && tlen == 7) {\n            m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n          }\n        }\n      }\n\n      return m;\n    }\n\n    Snap._.transform2matrix = transform2matrix;\n    Snap._unit2px = unit2px;\n    var contains = glob.doc.contains || glob.doc.compareDocumentPosition ? function (a, b) {\n      var adown = a.nodeType == 9 ? a.documentElement : a,\n          bup = b && b.parentNode;\n      return a == bup || !!(bup && bup.nodeType == 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n    } : function (a, b) {\n      if (b) {\n        while (b) {\n          b = b.parentNode;\n\n          if (b == a) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    function getSomeDefs(el) {\n      var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || el.node.parentNode && wrap(el.node.parentNode) || Snap.select(\"svg\") || Snap(0, 0),\n          pdefs = p.select(\"defs\"),\n          defs = pdefs == null ? false : pdefs.node;\n\n      if (!defs) {\n        defs = make(\"defs\", p.node).node;\n      }\n\n      return defs;\n    }\n\n    function getSomeSVG(el) {\n      return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n    }\n\n    Snap._.getSomeDefs = getSomeDefs;\n    Snap._.getSomeSVG = getSomeSVG;\n\n    function unit2px(el, name, value) {\n      var svg = getSomeSVG(el).node,\n          out = {},\n          mgr = svg.querySelector(\".svg---mgr\");\n\n      if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {\n          x: -9e9,\n          y: -9e9,\n          width: 10,\n          height: 10,\n          \"class\": \"svg---mgr\",\n          fill: \"none\"\n        });\n        svg.appendChild(mgr);\n      }\n\n      function getW(val) {\n        if (val == null) {\n          return E;\n        }\n\n        if (val == +val) {\n          return val;\n        }\n\n        $(mgr, {\n          width: val\n        });\n\n        try {\n          return mgr.getBBox().width;\n        } catch (e) {\n          return 0;\n        }\n      }\n\n      function getH(val) {\n        if (val == null) {\n          return E;\n        }\n\n        if (val == +val) {\n          return val;\n        }\n\n        $(mgr, {\n          height: val\n        });\n\n        try {\n          return mgr.getBBox().height;\n        } catch (e) {\n          return 0;\n        }\n      }\n\n      function set(nam, f) {\n        if (name == null) {\n          out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n          out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n      }\n\n      switch (el.type) {\n        case \"rect\":\n          set(\"rx\", getW);\n          set(\"ry\", getH);\n\n        case \"image\":\n          set(\"width\", getW);\n          set(\"height\", getH);\n\n        case \"text\":\n          set(\"x\", getW);\n          set(\"y\", getH);\n          break;\n\n        case \"circle\":\n          set(\"cx\", getW);\n          set(\"cy\", getH);\n          set(\"r\", getW);\n          break;\n\n        case \"ellipse\":\n          set(\"cx\", getW);\n          set(\"cy\", getH);\n          set(\"rx\", getW);\n          set(\"ry\", getH);\n          break;\n\n        case \"line\":\n          set(\"x1\", getW);\n          set(\"x2\", getW);\n          set(\"y1\", getH);\n          set(\"y2\", getH);\n          break;\n\n        case \"marker\":\n          set(\"refX\", getW);\n          set(\"markerWidth\", getW);\n          set(\"refY\", getH);\n          set(\"markerHeight\", getH);\n          break;\n\n        case \"radialGradient\":\n          set(\"fx\", getW);\n          set(\"fy\", getH);\n          break;\n\n        case \"tspan\":\n          set(\"dx\", getW);\n          set(\"dy\", getH);\n          break;\n\n        default:\n          set(name, getW);\n      }\n\n      svg.removeChild(mgr);\n      return out;\n    }\n    /*\\\n     * Snap.select\n     [ method ]\n     **\n     * Wraps a DOM element specified by CSS selector as @Element\n     - query (string) CSS selector of the element\n     = (Element) the current element\n    \\*/\n\n\n    Snap.select = function (query) {\n      query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n      return wrap(glob.doc.querySelector(query));\n    };\n    /*\\\n     * Snap.selectAll\n     [ method ]\n     **\n     * Wraps DOM elements specified by CSS selector as set or array of @Element\n     - query (string) CSS selector of the element\n     = (Element) the current element\n    \\*/\n\n\n    Snap.selectAll = function (query) {\n      var nodelist = glob.doc.querySelectorAll(query),\n          set = (Snap.set || Array)();\n\n      for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n      }\n\n      return set;\n    };\n\n    function add2group(list) {\n      if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n      }\n\n      var i = 0,\n          j = 0,\n          node = this.node;\n\n      while (this[i]) delete this[i++];\n\n      for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n          list[i].forEach(function (el) {\n            node.appendChild(el.node);\n          });\n        } else {\n          node.appendChild(list[i].node);\n        }\n      }\n\n      var children = node.childNodes;\n\n      for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n      }\n\n      return this;\n    } // Hub garbage collector every 10s\n\n\n    setInterval(function () {\n      for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n          delete hub[key];\n        }\n      }\n    }, 1e4);\n\n    function Element(el) {\n      if (el.snap in hub) {\n        return hub[el.snap];\n      }\n\n      var svg;\n\n      try {\n        svg = el.ownerSVGElement;\n      } catch (e) {}\n      /*\\\n       * Element.node\n       [ property (object) ]\n       **\n       * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n       > Usage\n       | // draw a circle at coordinate 10,10 with radius of 10\n       | var c = paper.circle(10, 10, 10);\n       | c.node.onclick = function () {\n       |     c.attr(\"fill\", \"red\");\n       | };\n      \\*/\n\n\n      this.node = el;\n\n      if (svg) {\n        this.paper = new Paper(svg);\n      }\n      /*\\\n       * Element.type\n       [ property (string) ]\n       **\n       * SVG tag name of the given element.\n      \\*/\n\n\n      this.type = el.tagName || el.nodeName;\n      var id = this.id = ID(this);\n      this.anims = {};\n      this._ = {\n        transform: []\n      };\n      el.snap = id;\n      hub[id] = this;\n\n      if (this.type == \"g\") {\n        this.add = add2group;\n      }\n\n      if (this.type in {\n        g: 1,\n        mask: 1,\n        pattern: 1,\n        symbol: 1\n      }) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n          this[method] = Paper.prototype[method];\n        }\n      }\n    }\n    /*\\\n      * Element.attr\n      [ method ]\n      **\n      * Gets or sets given attributes of the element.\n      **\n      - params (object) contains key-value pairs of attributes you want to set\n      * or\n      - param (string) name of the attribute\n      = (Element) the current element\n      * or\n      = (string) value of attribute\n      > Usage\n      | el.attr({\n      |     fill: \"#fc0\",\n      |     stroke: \"#000\",\n      |     strokeWidth: 2, // CamelCase...\n      |     \"fill-opacity\": 0.5, // or dash-separated names\n      |     width: \"*=2\" // prefixed values\n      | });\n      | console.log(el.attr(\"fill\")); // #fc0\n      * Prefixed values in format `\"+=10\"` supported. All four operations\n      * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n      * and `-`: `\"+=2em\"`.\n     \\*/\n\n\n    Element.prototype.attr = function (params, value) {\n      var el = this,\n          node = el.node;\n\n      if (!params) {\n        if (node.nodeType != 1) {\n          return {\n            text: node.nodeValue\n          };\n        }\n\n        var attr = node.attributes,\n            out = {};\n\n        for (var i = 0, ii = attr.length; i < ii; i++) {\n          out[attr[i].nodeName] = attr[i].nodeValue;\n        }\n\n        return out;\n      }\n\n      if (is(params, \"string\")) {\n        if (arguments.length > 1) {\n          var json = {};\n          json[params] = value;\n          params = json;\n        } else {\n          return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n        }\n      }\n\n      for (var att in params) {\n        if (params[has](att)) {\n          eve(\"snap.util.attr.\" + att, el, params[att]);\n        }\n      }\n\n      return el;\n    };\n    /*\\\n     * Snap.parse\n     [ method ]\n     **\n     * Parses SVG fragment and converts it into a @Fragment\n     **\n     - svg (string) SVG string\n     = (Fragment) the @Fragment\n    \\*/\n\n\n    Snap.parse = function (svg) {\n      var f = glob.doc.createDocumentFragment(),\n          full = true,\n          div = glob.doc.createElement(\"div\");\n      svg = Str(svg);\n\n      if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n      }\n\n      div.innerHTML = svg;\n      svg = div.getElementsByTagName(\"svg\")[0];\n\n      if (svg) {\n        if (full) {\n          f = svg;\n        } else {\n          while (svg.firstChild) {\n            f.appendChild(svg.firstChild);\n          }\n        }\n      }\n\n      return new Fragment(f);\n    };\n\n    function Fragment(frag) {\n      this.node = frag;\n    }\n    /*\\\n     * Snap.fragment\n     [ method ]\n     **\n     * Creates a DOM fragment from a given list of elements or strings\n     **\n     - varargs (…) SVG string\n     = (Fragment) the @Fragment\n    \\*/\n\n\n    Snap.fragment = function () {\n      var args = Array.prototype.slice.call(arguments, 0),\n          f = glob.doc.createDocumentFragment();\n\n      for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n\n        if (item.node && item.node.nodeType) {\n          f.appendChild(item.node);\n        }\n\n        if (item.nodeType) {\n          f.appendChild(item);\n        }\n\n        if (typeof item == \"string\") {\n          f.appendChild(Snap.parse(item).node);\n        }\n      }\n\n      return new Fragment(f);\n    };\n\n    function make(name, parent) {\n      var res = $(name);\n      parent.appendChild(res);\n      var el = wrap(res);\n      return el;\n    }\n\n    function Paper(w, h) {\n      var res,\n          desc,\n          defs,\n          proto = Paper.prototype;\n\n      if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n          return hub[w.snap];\n        }\n\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n\n        if (!desc) {\n          desc = $(\"desc\");\n          desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n          res.node.appendChild(desc);\n        }\n\n        if (!defs) {\n          defs = $(\"defs\");\n          res.node.appendChild(defs);\n        }\n\n        res.defs = defs;\n\n        for (var key in proto) if (proto[has](key)) {\n          res[key] = proto[key];\n        }\n\n        res.paper = res.root = res;\n      } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n          height: h,\n          version: 1.1,\n          width: w,\n          xmlns: xmlns\n        });\n      }\n\n      return res;\n    }\n\n    function wrap(dom) {\n      if (!dom) {\n        return dom;\n      }\n\n      if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n      }\n\n      if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n      }\n\n      if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n      }\n\n      return new Element(dom);\n    }\n\n    Snap._.make = make;\n    Snap._.wrap = wrap;\n    /*\\\n     * Paper.el\n     [ method ]\n     **\n     * Creates an element on paper with a given name and no attributes\n     **\n     - name (string) tag name\n     - attr (object) attributes\n     = (Element) the current element\n     > Usage\n     | var c = paper.circle(10, 10, 10); // is the same as...\n     | var c = paper.el(\"circle\").attr({\n     |     cx: 10,\n     |     cy: 10,\n     |     r: 10\n     | });\n     | // and the same as\n     | var c = paper.el(\"circle\", {\n     |     cx: 10,\n     |     cy: 10,\n     |     r: 10\n     | });\n    \\*/\n\n    Paper.prototype.el = function (name, attr) {\n      var el = make(name, this.node);\n      attr && el.attr(attr);\n      return el;\n    };\n    /*\\\n     * Element.children\n     [ method ]\n     **\n     * Returns array of all the children of the element.\n     = (array) array of Elements\n    \\*/\n\n\n    Element.prototype.children = function () {\n      var out = [],\n          ch = this.node.childNodes;\n\n      for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n      }\n\n      return out;\n    };\n\n    function jsonFiller(root, o) {\n      for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n          type: root[i].type,\n          attr: root[i].attr()\n        },\n            children = root[i].children();\n        o.push(item);\n\n        if (children.length) {\n          jsonFiller(children, item.childNodes = []);\n        }\n      }\n    }\n    /*\\\n     * Element.toJSON\n     [ method ]\n     **\n     * Returns object representation of the given element and all its children.\n     = (object) in format\n     o {\n     o     type (string) this.type,\n     o     attr (object) attributes map,\n     o     childNodes (array) optional array of children in the same format\n     o }\n    \\*/\n\n\n    Element.prototype.toJSON = function () {\n      var out = [];\n      jsonFiller([this], out);\n      return out[0];\n    }; // default\n\n\n    eve.on(\"snap.util.getattr\", function () {\n      var att = eve.nt();\n      att = att.substring(att.lastIndexOf(\".\") + 1);\n      var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n      });\n\n      if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n      } else {\n        return $(this.node, att);\n      }\n    });\n    var cssAttr = {\n      \"alignment-baseline\": 0,\n      \"baseline-shift\": 0,\n      \"clip\": 0,\n      \"clip-path\": 0,\n      \"clip-rule\": 0,\n      \"color\": 0,\n      \"color-interpolation\": 0,\n      \"color-interpolation-filters\": 0,\n      \"color-profile\": 0,\n      \"color-rendering\": 0,\n      \"cursor\": 0,\n      \"direction\": 0,\n      \"display\": 0,\n      \"dominant-baseline\": 0,\n      \"enable-background\": 0,\n      \"fill\": 0,\n      \"fill-opacity\": 0,\n      \"fill-rule\": 0,\n      \"filter\": 0,\n      \"flood-color\": 0,\n      \"flood-opacity\": 0,\n      \"font\": 0,\n      \"font-family\": 0,\n      \"font-size\": 0,\n      \"font-size-adjust\": 0,\n      \"font-stretch\": 0,\n      \"font-style\": 0,\n      \"font-variant\": 0,\n      \"font-weight\": 0,\n      \"glyph-orientation-horizontal\": 0,\n      \"glyph-orientation-vertical\": 0,\n      \"image-rendering\": 0,\n      \"kerning\": 0,\n      \"letter-spacing\": 0,\n      \"lighting-color\": 0,\n      \"marker\": 0,\n      \"marker-end\": 0,\n      \"marker-mid\": 0,\n      \"marker-start\": 0,\n      \"mask\": 0,\n      \"opacity\": 0,\n      \"overflow\": 0,\n      \"pointer-events\": 0,\n      \"shape-rendering\": 0,\n      \"stop-color\": 0,\n      \"stop-opacity\": 0,\n      \"stroke\": 0,\n      \"stroke-dasharray\": 0,\n      \"stroke-dashoffset\": 0,\n      \"stroke-linecap\": 0,\n      \"stroke-linejoin\": 0,\n      \"stroke-miterlimit\": 0,\n      \"stroke-opacity\": 0,\n      \"stroke-width\": 0,\n      \"text-anchor\": 0,\n      \"text-decoration\": 0,\n      \"text-rendering\": 0,\n      \"unicode-bidi\": 0,\n      \"visibility\": 0,\n      \"word-spacing\": 0,\n      \"writing-mode\": 0\n    };\n    eve.on(\"snap.util.attr\", function (value) {\n      var att = eve.nt(),\n          attr = {};\n      att = att.substring(att.lastIndexOf(\".\") + 1);\n      attr[att] = value;\n      var style = att.replace(/-(\\w)/gi, function (all, letter) {\n        return letter.toUpperCase();\n      }),\n          css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n      });\n\n      if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n      } else {\n        $(this.node, attr);\n      }\n    });\n\n    (function (proto) {})(Paper.prototype); // simple ajax\n\n    /*\\\n     * Snap.ajax\n     [ method ]\n     **\n     * Simple implementation of Ajax\n     **\n     - url (string) URL\n     - postData (object|string) data for post request\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n     * or\n     - url (string) URL\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n     = (XMLHttpRequest) the XMLHttpRequest object, just in case\n    \\*/\n\n\n    Snap.ajax = function (url, postData, callback, scope) {\n      var req = new XMLHttpRequest(),\n          id = ID();\n\n      if (req) {\n        if (is(postData, \"function\")) {\n          scope = callback;\n          callback = postData;\n          postData = null;\n        } else if (is(postData, \"object\")) {\n          var pd = [];\n\n          for (var key in postData) if (postData.hasOwnProperty(key)) {\n            pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n          }\n\n          postData = pd.join(\"&\");\n        }\n\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n\n        if (postData) {\n          req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n          req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n\n        if (callback) {\n          eve.once(\"snap.ajax.\" + id + \".0\", callback);\n          eve.once(\"snap.ajax.\" + id + \".200\", callback);\n          eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n\n        req.onreadystatechange = function () {\n          if (req.readyState != 4) return;\n          eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n\n        if (req.readyState == 4) {\n          return req;\n        }\n\n        req.send(postData);\n        return req;\n      }\n    };\n    /*\\\n     * Snap.load\n     [ method ]\n     **\n     * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n     **\n     - url (string) URL\n     - callback (function) callback\n     - scope (object) #optional scope of callback\n    \\*/\n\n\n    Snap.load = function (url, callback, scope) {\n      Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n      });\n    };\n\n    var getOffset = function (elem) {\n      var box = elem.getBoundingClientRect(),\n          doc = elem.ownerDocument,\n          body = doc.body,\n          docElem = doc.documentElement,\n          clientTop = docElem.clientTop || body.clientTop || 0,\n          clientLeft = docElem.clientLeft || body.clientLeft || 0,\n          top = box.top + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop) - clientTop,\n          left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n      return {\n        y: top,\n        x: left\n      };\n    };\n    /*\\\n     * Snap.getElementByPoint\n     [ method ]\n     **\n     * Returns you topmost element under given point.\n     **\n     = (object) Snap element object\n     - x (number) x coordinate from the top left corner of the window\n     - y (number) y coordinate from the top left corner of the window\n     > Usage\n     | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n    \\*/\n\n\n    Snap.getElementByPoint = function (x, y) {\n      var paper = this,\n          svg = paper.canvas,\n          target = glob.doc.elementFromPoint(x, y);\n\n      if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n\n        if (hits.length) {\n          target = hits[hits.length - 1];\n        }\n      }\n\n      if (!target) {\n        return null;\n      }\n\n      return wrap(target);\n    };\n    /*\\\n     * Snap.plugin\n     [ method ]\n     **\n     * Let you write plugins. You pass in a function with five arguments, like this:\n     | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n     |     Snap.newmethod = function () {};\n     |     Element.prototype.newmethod = function () {};\n     |     Paper.prototype.newmethod = function () {};\n     | });\n     * Inside the function you have access to all main objects (and their\n     * prototypes). This allow you to extend anything you want.\n     **\n     - f (function) your plugin body\n    \\*/\n\n\n    Snap.plugin = function (f) {\n      f(Snap, Element, Paper, glob, Fragment);\n    };\n\n    glob.win.Snap = Snap;\n    return Snap;\n  }(window || this); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n\n    elproto.getBBox = function (isWithoutTransform) {\n      if (this.type == \"tspan\") {\n        return Snap._.box(this.node.getClientRects().item(0));\n      }\n\n      if (!Snap.Matrix || !Snap.path) {\n        return this.node.getBBox();\n      }\n\n      var el = this,\n          m = new Snap.Matrix();\n\n      if (el.removed) {\n        return Snap._.box();\n      }\n\n      while (el.type == \"use\") {\n        if (!isWithoutTransform) {\n          m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n        }\n\n        if (el.original) {\n          el = el.original;\n        } else {\n          var href = el.attr(\"xlink:href\");\n          el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n        }\n      }\n\n      var _ = el._,\n          pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n\n      try {\n        if (isWithoutTransform) {\n          _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n          return Snap._.box(_.bboxwt);\n        } else {\n          el.realPath = pathfinder(el);\n          el.matrix = el.transform().localMatrix;\n          _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n          return Snap._.box(_.bbox);\n        }\n      } catch (e) {\n        // Firefox doesn’t give you bbox of hidden element\n        return Snap._.box();\n      }\n    };\n\n    var propString = function () {\n      return this.string;\n    };\n\n    function extractTransform(el, tstr) {\n      if (tstr == null) {\n        var doReturn = true;\n\n        if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n          tstr = el.node.getAttribute(\"gradientTransform\");\n        } else if (el.type == \"pattern\") {\n          tstr = el.node.getAttribute(\"patternTransform\");\n        } else {\n          tstr = el.node.getAttribute(\"transform\");\n        }\n\n        if (!tstr) {\n          return new Snap.Matrix();\n        }\n\n        tstr = Snap._.svgTransform2string(tstr);\n      } else {\n        if (!Snap._.rgTransform.test(tstr)) {\n          tstr = Snap._.svgTransform2string(tstr);\n        } else {\n          tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n        }\n\n        if (is(tstr, \"array\")) {\n          tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n        }\n\n        el._.transform = tstr;\n      }\n\n      var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n\n      if (doReturn) {\n        return m;\n      } else {\n        el.matrix = m;\n      }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n\n\n    elproto.transform = function (tstr) {\n      var _ = this._;\n\n      if (tstr == null) {\n        var papa = this,\n            global = new Snap.Matrix(this.node.getCTM()),\n            local = extractTransform(this),\n            ms = [local],\n            m = new Snap.Matrix(),\n            i,\n            localString = local.toTransformString(),\n            string = Str(local) == Str(this.matrix) ? Str(_.transform) : localString;\n\n        while (papa.type != \"svg\" && (papa = papa.parent())) {\n          ms.push(extractTransform(papa));\n        }\n\n        i = ms.length;\n\n        while (i--) {\n          m.add(ms[i]);\n        }\n\n        return {\n          string: string,\n          globalMatrix: global,\n          totalMatrix: m,\n          localMatrix: local,\n          diffMatrix: global.clone().add(local.invert()),\n          global: global.toTransformString(),\n          total: m.toTransformString(),\n          local: localString,\n          toString: propString\n        };\n      }\n\n      if (tstr instanceof Snap.Matrix) {\n        this.matrix = tstr;\n        this._.transform = tstr.toTransformString();\n      } else {\n        extractTransform(this, tstr);\n      }\n\n      if (this.node) {\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n          $(this.node, {\n            gradientTransform: this.matrix\n          });\n        } else if (this.type == \"pattern\") {\n          $(this.node, {\n            patternTransform: this.matrix\n          });\n        } else {\n          $(this.node, {\n            transform: this.matrix\n          });\n        }\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.parent = function () {\n      return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n\n\n    elproto.append = elproto.add = function (el) {\n      if (el) {\n        if (el.type == \"set\") {\n          var it = this;\n          el.forEach(function (el) {\n            it.add(el);\n          });\n          return this;\n        }\n\n        el = wrap(el);\n        this.node.appendChild(el.node);\n        el.paper = this.paper;\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n\n\n    elproto.appendTo = function (el) {\n      if (el) {\n        el = wrap(el);\n        el.append(this);\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.prepend = function (el) {\n      if (el) {\n        if (el.type == \"set\") {\n          var it = this,\n              first;\n          el.forEach(function (el) {\n            if (first) {\n              first.after(el);\n            } else {\n              it.prepend(el);\n            }\n\n            first = el;\n          });\n          return this;\n        }\n\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.insertBefore(el.node, this.node.firstChild);\n        this.add && this.add();\n        el.paper = this.paper;\n        this.parent() && this.parent().add();\n        parent && parent.add();\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n\n\n    elproto.prependTo = function (el) {\n      el = wrap(el);\n      el.prepend(this);\n      return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.before = function (el) {\n      if (el.type == \"set\") {\n        var it = this;\n        el.forEach(function (el) {\n          var parent = el.parent();\n          it.node.parentNode.insertBefore(el.node, it.node);\n          parent && parent.add();\n        });\n        this.parent().add();\n        return this;\n      }\n\n      el = wrap(el);\n      var parent = el.parent();\n      this.node.parentNode.insertBefore(el.node, this.node);\n      this.parent() && this.parent().add();\n      parent && parent.add();\n      el.paper = this.paper;\n      return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.after = function (el) {\n      el = wrap(el);\n      var parent = el.parent();\n\n      if (this.node.nextSibling) {\n        this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n      } else {\n        this.node.parentNode.appendChild(el.node);\n      }\n\n      this.parent() && this.parent().add();\n      parent && parent.add();\n      el.paper = this.paper;\n      return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.insertBefore = function (el) {\n      el = wrap(el);\n      var parent = this.parent();\n      el.node.parentNode.insertBefore(this.node, el.node);\n      this.paper = el.paper;\n      parent && parent.add();\n      el.parent() && el.parent().add();\n      return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n\n\n    elproto.insertAfter = function (el) {\n      el = wrap(el);\n      var parent = this.parent();\n      el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n      this.paper = el.paper;\n      parent && parent.add();\n      el.parent() && el.parent().add();\n      return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n\n\n    elproto.remove = function () {\n      var parent = this.parent();\n      this.node.parentNode && this.node.parentNode.removeChild(this.node);\n      delete this.paper;\n      this.removed = true;\n      parent && parent.add();\n      return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n\n\n    elproto.select = function (query) {\n      return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n\n\n    elproto.selectAll = function (query) {\n      var nodelist = this.node.querySelectorAll(query),\n          set = (Snap.set || Array)();\n\n      for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n      }\n\n      return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n\n\n    elproto.asPX = function (attr, value) {\n      if (value == null) {\n        value = this.attr(attr);\n      }\n\n      return +unit2px(this, attr, value);\n    }; // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n\n\n    elproto.use = function () {\n      var use,\n          id = this.node.id;\n\n      if (!id) {\n        id = this.id;\n        $(this.node, {\n          id: id\n        });\n      }\n\n      if (this.type == \"linearGradient\" || this.type == \"radialGradient\" || this.type == \"pattern\") {\n        use = make(this.type, this.node.parentNode);\n      } else {\n        use = make(\"use\", this.node.parentNode);\n      }\n\n      $(use.node, {\n        \"xlink:href\": \"#\" + id\n      });\n      use.original = this;\n      return use;\n    };\n\n    function fixids(el) {\n      var els = el.selectAll(\"*\"),\n          it,\n          url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n          ids = [],\n          uses = {};\n\n      function urltest(it, name) {\n        var val = $(it.node, name);\n        val = val && val.match(url);\n        val = val && val[2];\n\n        if (val && val.charAt() == \"#\") {\n          val = val.substring(1);\n        } else {\n          return;\n        }\n\n        if (val) {\n          uses[val] = (uses[val] || []).concat(function (id) {\n            var attr = {};\n            attr[name] = Snap.url(id);\n            $(it.node, attr);\n          });\n        }\n      }\n\n      function linktest(it) {\n        var val = $(it.node, \"xlink:href\");\n\n        if (val && val.charAt() == \"#\") {\n          val = val.substring(1);\n        } else {\n          return;\n        }\n\n        if (val) {\n          uses[val] = (uses[val] || []).concat(function (id) {\n            it.attr(\"xlink:href\", \"#\" + id);\n          });\n        }\n      }\n\n      for (var i = 0, ii = els.length; i < ii; i++) {\n        it = els[i];\n        urltest(it, \"fill\");\n        urltest(it, \"stroke\");\n        urltest(it, \"filter\");\n        urltest(it, \"mask\");\n        urltest(it, \"clip-path\");\n        linktest(it);\n        var oldid = $(it.node, \"id\");\n\n        if (oldid) {\n          $(it.node, {\n            id: it.id\n          });\n          ids.push({\n            old: oldid,\n            id: it.id\n          });\n        }\n      }\n\n      for (i = 0, ii = ids.length; i < ii; i++) {\n        var fs = uses[ids[i].old];\n\n        if (fs) {\n          for (var j = 0, jj = fs.length; j < jj; j++) {\n            fs[j](ids[i].id);\n          }\n        }\n      }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n\n\n    elproto.clone = function () {\n      var clone = wrap(this.node.cloneNode(true));\n\n      if ($(clone.node, \"id\")) {\n        $(clone.node, {\n          id: clone.id\n        });\n      }\n\n      fixids(clone);\n      clone.insertAfter(this);\n      return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n\n\n    elproto.toDefs = function () {\n      var defs = getSomeDefs(this);\n      defs.appendChild(this.node);\n      return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n\n\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n      var p = make(\"pattern\", getSomeDefs(this));\n\n      if (x == null) {\n        x = this.getBBox();\n      }\n\n      if (is(x, \"object\") && \"x\" in x) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        x = x.x;\n      }\n\n      $(p.node, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        patternUnits: \"userSpaceOnUse\",\n        id: p.id,\n        viewBox: [x, y, width, height].join(\" \")\n      });\n      p.node.appendChild(this.node);\n      return p;\n    }; // SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n    // SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n\n\n    elproto.marker = function (x, y, width, height, refX, refY) {\n      var p = make(\"marker\", getSomeDefs(this));\n\n      if (x == null) {\n        x = this.getBBox();\n      }\n\n      if (is(x, \"object\") && \"x\" in x) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        refX = x.refX || x.cx;\n        refY = x.refY || x.cy;\n        x = x.x;\n      }\n\n      $(p.node, {\n        viewBox: [x, y, width, height].join(\" \"),\n        markerWidth: width,\n        markerHeight: height,\n        orient: \"auto\",\n        refX: refX || 0,\n        refY: refY || 0,\n        id: p.id\n      });\n      p.node.appendChild(this.node);\n      return p;\n    };\n\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n\n    elproto.data = function (key, value) {\n      var data = eldata[this.id] = eldata[this.id] || {};\n\n      if (arguments.length == 0) {\n        eve(\"snap.data.get.\" + this.id, this, data, null);\n        return data;\n      }\n\n      if (arguments.length == 1) {\n        if (Snap.is(key, \"object\")) {\n          for (var i in key) if (key[has](i)) {\n            this.data(i, key[i]);\n          }\n\n          return this;\n        }\n\n        eve(\"snap.data.get.\" + this.id, this, data[key], key);\n        return data[key];\n      }\n\n      data[key] = value;\n      eve(\"snap.data.set.\" + this.id, this, value, key);\n      return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n\n\n    elproto.removeData = function (key) {\n      if (key == null) {\n        eldata[this.id] = {};\n      } else {\n        eldata[this.id] && delete eldata[this.id][key];\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n\n\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n\n    elproto.innerSVG = toString();\n\n    function toString(type) {\n      return function () {\n        var res = type ? \"<\" + this.type : \"\",\n            attr = this.node.attributes,\n            chld = this.node.childNodes;\n\n        if (type) {\n          for (var i = 0, ii = attr.length; i < ii; i++) {\n            res += \" \" + attr[i].name + '=\"' + attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n          }\n        }\n\n        if (chld.length) {\n          type && (res += \">\");\n\n          for (i = 0, ii = chld.length; i < ii; i++) {\n            if (chld[i].nodeType == 3) {\n              res += chld[i].nodeValue;\n            } else if (chld[i].nodeType == 1) {\n              res += wrap(chld[i]).toString();\n            }\n          }\n\n          type && (res += \"</\" + this.type + \">\");\n        } else {\n          type && (res += \"/>\");\n        }\n\n        return res;\n      };\n    }\n\n    elproto.toDataURL = function () {\n      if (window && window.btoa) {\n        var bb = this.getBBox(),\n            svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n          x: +bb.x.toFixed(3),\n          y: +bb.y.toFixed(3),\n          width: +bb.width.toFixed(3),\n          height: +bb.height.toFixed(3),\n          contents: this.outerSVG()\n        });\n        return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n      }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n\n\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n\n    Fragment.prototype.selectAll = elproto.selectAll;\n  }); // Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n\n    function slice(from, to, f) {\n      return function (arr) {\n        var res = arr.slice(from, to);\n\n        if (res.length == 1) {\n          res = res[0];\n        }\n\n        return f ? f(res) : res;\n      };\n    }\n\n    var Animation = function (attr, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n\n      this.attr = attr;\n      this.dur = ms;\n      easing && (this.easing = easing);\n      callback && (this.callback = callback);\n    };\n\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n\n    Snap.animation = function (attr, ms, easing, callback) {\n      return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n\n\n    elproto.inAnim = function () {\n      var el = this,\n          res = [];\n\n      for (var id in el.anims) if (el.anims[has](id)) {\n        (function (a) {\n          res.push({\n            anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n            mina: a,\n            curStatus: a.status(),\n            status: function (val) {\n              return a.status(val);\n            },\n            stop: function () {\n              a.stop();\n            }\n          });\n        })(el.anims[id]);\n      }\n\n      return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n\n\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n\n      var now = mina.time(),\n          anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n      callback && eve.once(\"mina.finish.\" + anim.id, callback);\n      return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n\n\n    elproto.stop = function () {\n      var anims = this.inAnim();\n\n      for (var i = 0, ii = anims.length; i < ii; i++) {\n        anims[i].stop();\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n\n\n    elproto.animate = function (attrs, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n\n      if (attrs instanceof Animation) {\n        callback = attrs.callback;\n        easing = attrs.easing;\n        ms = attrs.dur;\n        attrs = attrs.attr;\n      }\n\n      var fkeys = [],\n          tkeys = [],\n          keys = {},\n          from,\n          to,\n          f,\n          eq,\n          el = this;\n\n      for (var key in attrs) if (attrs[has](key)) {\n        if (el.equal) {\n          eq = el.equal(key, Str(attrs[key]));\n          from = eq.from;\n          to = eq.to;\n          f = eq.f;\n        } else {\n          from = +el.attr(key);\n          to = +attrs[key];\n        }\n\n        var len = is(from, \"array\") ? from.length : 1;\n        keys[key] = slice(fkeys.length, fkeys.length + len, f);\n        fkeys = fkeys.concat(from);\n        tkeys = tkeys.concat(to);\n      }\n\n      var now = mina.time(),\n          anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n        var attr = {};\n\n        for (var key in keys) if (keys[has](key)) {\n          attr[key] = keys[key](val);\n        }\n\n        el.attr(attr);\n      }, easing);\n      el.anims[anim.id] = anim;\n      anim._attrs = attrs;\n      anim._callback = callback;\n      eve(\"snap.animcreated.\" + el.id, anim);\n      eve.once(\"mina.finish.\" + anim.id, function () {\n        eve.off(\"mina.*.\" + anim.id);\n        delete el.anims[anim.id];\n        callback && callback.call(el);\n      });\n      eve.once(\"mina.stop.\" + anim.id, function () {\n        eve.off(\"mina.*.\" + anim.id);\n        delete el.anims[anim.id];\n      });\n      return el;\n    };\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n\n    function Matrix(a, b, c, d, e, f) {\n      if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n        this.a = a.a;\n        this.b = a.b;\n        this.c = a.c;\n        this.d = a.d;\n        this.e = a.e;\n        this.f = a.f;\n        return;\n      }\n\n      if (a != null) {\n        this.a = +a;\n        this.b = +b;\n        this.c = +c;\n        this.d = +d;\n        this.e = +e;\n        this.f = +f;\n      } else {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.e = 0;\n        this.f = 0;\n      }\n    }\n\n    (function (matrixproto) {\n      /*\\\n       * Matrix.add\n       [ method ]\n       **\n       * Adds the given matrix to existing one\n       - a (number)\n       - b (number)\n       - c (number)\n       - d (number)\n       - e (number)\n       - f (number)\n       * or\n       - matrix (object) @Matrix\n      \\*/\n      matrixproto.add = function (a, b, c, d, e, f) {\n        if (a && a instanceof Matrix) {\n          return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n        }\n\n        var aNew = a * this.a + b * this.c,\n            bNew = a * this.b + b * this.d;\n        this.e += e * this.a + f * this.c;\n        this.f += e * this.b + f * this.d;\n        this.c = c * this.a + d * this.c;\n        this.d = c * this.b + d * this.d;\n        this.a = aNew;\n        this.b = bNew;\n        return this;\n      };\n      /*\\\n       * Matrix.multLeft\n       [ method ]\n       **\n       * Multiplies a passed affine transform to the left: M * this.\n       - a (number)\n       - b (number)\n       - c (number)\n       - d (number)\n       - e (number)\n       - f (number)\n       * or\n       - matrix (object) @Matrix\n      \\*/\n\n\n      Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n        if (a && a instanceof Matrix) {\n          return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n        }\n\n        var aNew = a * this.a + c * this.b,\n            cNew = a * this.c + c * this.d,\n            eNew = a * this.e + c * this.f + e;\n        this.b = b * this.a + d * this.b;\n        this.d = b * this.c + d * this.d;\n        this.f = b * this.e + d * this.f + f;\n        this.a = aNew;\n        this.c = cNew;\n        this.e = eNew;\n        return this;\n      };\n      /*\\\n       * Matrix.invert\n       [ method ]\n       **\n       * Returns an inverted version of the matrix\n       = (object) @Matrix\n      \\*/\n\n\n      matrixproto.invert = function () {\n        var me = this,\n            x = me.a * me.d - me.b * me.c;\n        return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n      };\n      /*\\\n       * Matrix.clone\n       [ method ]\n       **\n       * Returns a copy of the matrix\n       = (object) @Matrix\n      \\*/\n\n\n      matrixproto.clone = function () {\n        return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n      };\n      /*\\\n       * Matrix.translate\n       [ method ]\n       **\n       * Translate the matrix\n       - x (number) horizontal offset distance\n       - y (number) vertical offset distance\n      \\*/\n\n\n      matrixproto.translate = function (x, y) {\n        this.e += x * this.a + y * this.c;\n        this.f += x * this.b + y * this.d;\n        return this;\n      };\n      /*\\\n       * Matrix.scale\n       [ method ]\n       **\n       * Scales the matrix\n       - x (number) amount to be scaled, with `1` resulting in no change\n       - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n       - cx (number) #optional horizontal origin point from which to scale\n       - cy (number) #optional vertical origin point from which to scale\n       * Default cx, cy is the middle point of the element.\n      \\*/\n\n\n      matrixproto.scale = function (x, y, cx, cy) {\n        y == null && (y = x);\n        (cx || cy) && this.translate(cx, cy);\n        this.a *= x;\n        this.b *= x;\n        this.c *= y;\n        this.d *= y;\n        (cx || cy) && this.translate(-cx, -cy);\n        return this;\n      };\n      /*\\\n       * Matrix.rotate\n       [ method ]\n       **\n       * Rotates the matrix\n       - a (number) angle of rotation, in degrees\n       - x (number) horizontal origin point from which to rotate\n       - y (number) vertical origin point from which to rotate\n      \\*/\n\n\n      matrixproto.rotate = function (a, x, y) {\n        a = Snap.rad(a);\n        x = x || 0;\n        y = y || 0;\n        var cos = +math.cos(a).toFixed(9),\n            sin = +math.sin(a).toFixed(9);\n        this.add(cos, sin, -sin, cos, x, y);\n        return this.add(1, 0, 0, 1, -x, -y);\n      };\n      /*\\\n       * Matrix.skewX\n       [ method ]\n       **\n       * Skews the matrix along the x-axis\n       - x (number) Angle to skew along the x-axis (in degrees).\n      \\*/\n\n\n      matrixproto.skewX = function (x) {\n        return this.skew(x, 0);\n      };\n      /*\\\n       * Matrix.skewY\n       [ method ]\n       **\n       * Skews the matrix along the y-axis\n       - y (number) Angle to skew along the y-axis (in degrees).\n      \\*/\n\n\n      matrixproto.skewY = function (y) {\n        return this.skew(0, y);\n      };\n      /*\\\n       * Matrix.skew\n       [ method ]\n       **\n       * Skews the matrix\n       - y (number) Angle to skew along the y-axis (in degrees).\n       - x (number) Angle to skew along the x-axis (in degrees).\n      \\*/\n\n\n      matrixproto.skew = function (x, y) {\n        x = x || 0;\n        y = y || 0;\n        x = Snap.rad(x);\n        y = Snap.rad(y);\n        var c = math.tan(x).toFixed(9);\n        var b = math.tan(y).toFixed(9);\n        return this.add(1, b, c, 1, 0, 0);\n      };\n      /*\\\n       * Matrix.x\n       [ method ]\n       **\n       * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n       - x (number)\n       - y (number)\n       = (number) x\n      \\*/\n\n\n      matrixproto.x = function (x, y) {\n        return x * this.a + y * this.c + this.e;\n      };\n      /*\\\n       * Matrix.y\n       [ method ]\n       **\n       * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n       - x (number)\n       - y (number)\n       = (number) y\n      \\*/\n\n\n      matrixproto.y = function (x, y) {\n        return x * this.b + y * this.d + this.f;\n      };\n\n      matrixproto.get = function (i) {\n        return +this[Str.fromCharCode(97 + i)].toFixed(4);\n      };\n\n      matrixproto.toString = function () {\n        return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n      };\n\n      matrixproto.offset = function () {\n        return [this.e.toFixed(4), this.f.toFixed(4)];\n      };\n\n      function norm(a) {\n        return a[0] * a[0] + a[1] * a[1];\n      }\n\n      function normalize(a) {\n        var mag = math.sqrt(norm(a));\n        a[0] && (a[0] /= mag);\n        a[1] && (a[1] /= mag);\n      }\n      /*\\\n       * Matrix.determinant\n       [ method ]\n       **\n       * Finds determinant of the given matrix.\n       = (number) determinant\n      \\*/\n\n\n      matrixproto.determinant = function () {\n        return this.a * this.d - this.b * this.c;\n      };\n      /*\\\n       * Matrix.split\n       [ method ]\n       **\n       * Splits matrix into primitive transformations\n       = (object) in format:\n       o dx (number) translation by x\n       o dy (number) translation by y\n       o scalex (number) scale by x\n       o scaley (number) scale by y\n       o shear (number) shear\n       o rotate (number) rotation in deg\n       o isSimple (boolean) could it be represented via simple transformations\n      \\*/\n\n\n      matrixproto.split = function () {\n        var out = {}; // translation\n\n        out.dx = this.e;\n        out.dy = this.f; // scale and shear\n\n        var row = [[this.a, this.b], [this.c, this.d]];\n        out.scalex = math.sqrt(norm(row[0]));\n        normalize(row[0]);\n        out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n        row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n        out.scaley = math.sqrt(norm(row[1]));\n        normalize(row[1]);\n        out.shear /= out.scaley;\n\n        if (this.determinant() < 0) {\n          out.scalex = -out.scalex;\n        } // rotation\n\n\n        var sin = row[0][1],\n            cos = row[1][1];\n\n        if (cos < 0) {\n          out.rotate = Snap.deg(math.acos(cos));\n\n          if (sin < 0) {\n            out.rotate = 360 - out.rotate;\n          }\n        } else {\n          out.rotate = Snap.deg(math.asin(sin));\n        }\n\n        out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n        out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n        out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n        return out;\n      };\n      /*\\\n       * Matrix.toTransformString\n       [ method ]\n       **\n       * Returns transform string that represents given matrix\n       = (string) transform string\n      \\*/\n\n\n      matrixproto.toTransformString = function (shorter) {\n        var s = shorter || this.split();\n\n        if (!+s.shear.toFixed(9)) {\n          s.scalex = +s.scalex.toFixed(4);\n          s.scaley = +s.scaley.toFixed(4);\n          s.rotate = +s.rotate.toFixed(4);\n          return (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) + (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) + (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n        } else {\n          return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n        }\n      };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n\n\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n\n    Snap.matrix = function (a, b, c, d, e, f) {\n      return new Matrix(a, b, c, d, e, f);\n    };\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n\n    Snap.deurl = function (value) {\n      var res = String(value).match(reURLValue);\n      return res ? res[2] : value;\n    }; // Attributes event handlers\n\n\n    eve.on(\"snap.util.attr.mask\", function (value) {\n      if (value instanceof Element || value instanceof Fragment) {\n        eve.stop();\n\n        if (value instanceof Fragment && value.node.childNodes.length == 1) {\n          value = value.node.firstChild;\n          getSomeDefs(this).appendChild(value);\n          value = wrap(value);\n        }\n\n        if (value.type == \"mask\") {\n          var mask = value;\n        } else {\n          mask = make(\"mask\", getSomeDefs(this));\n          mask.node.appendChild(value.node);\n        }\n\n        !mask.node.id && $(mask.node, {\n          id: mask.id\n        });\n        $(this.node, {\n          mask: URL(mask.id)\n        });\n      }\n    });\n\n    (function (clipIt) {\n      eve.on(\"snap.util.attr.clip\", clipIt);\n      eve.on(\"snap.util.attr.clip-path\", clipIt);\n      eve.on(\"snap.util.attr.clipPath\", clipIt);\n    })(function (value) {\n      if (value instanceof Element || value instanceof Fragment) {\n        eve.stop();\n        var clip,\n            node = value.node;\n\n        while (node) {\n          if (node.nodeName === \"clipPath\") {\n            clip = new Element(node);\n            break;\n          }\n\n          if (node.nodeName === \"svg\") {\n            clip = undefined;\n            break;\n          }\n\n          node = node.parentNode;\n        }\n\n        if (!clip) {\n          clip = make(\"clipPath\", getSomeDefs(this));\n          clip.node.appendChild(value.node);\n          !clip.node.id && $(clip.node, {\n            id: clip.id\n          });\n        }\n\n        $(this.node, {\n          \"clip-path\": URL(clip.node.id || clip.id)\n        });\n      }\n    });\n\n    function fillStroke(name) {\n      return function (value) {\n        eve.stop();\n\n        if (value instanceof Fragment && value.node.childNodes.length == 1 && (value.node.firstChild.tagName == \"radialGradient\" || value.node.firstChild.tagName == \"linearGradient\" || value.node.firstChild.tagName == \"pattern\")) {\n          value = value.node.firstChild;\n          getSomeDefs(this).appendChild(value);\n          value = wrap(value);\n        }\n\n        if (value instanceof Element) {\n          if (value.type == \"radialGradient\" || value.type == \"linearGradient\" || value.type == \"pattern\") {\n            if (!value.node.id) {\n              $(value.node, {\n                id: value.id\n              });\n            }\n\n            var fill = URL(value.node.id);\n          } else {\n            fill = value.attr(name);\n          }\n        } else {\n          fill = Snap.color(value);\n\n          if (fill.error) {\n            var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n\n            if (grad) {\n              if (!grad.node.id) {\n                $(grad.node, {\n                  id: grad.id\n                });\n              }\n\n              fill = URL(grad.node.id);\n            } else {\n              fill = value;\n            }\n          } else {\n            fill = Str(fill);\n          }\n        }\n\n        var attrs = {};\n        attrs[name] = fill;\n        $(this.node, attrs);\n        this.node.style[name] = E;\n      };\n    }\n\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n      string = Str(string);\n      var tokens = string.match(gradrg);\n\n      if (!tokens) {\n        return null;\n      }\n\n      var type = tokens[1],\n          params = tokens[2],\n          stops = tokens[3];\n      params = params.split(/\\s*,\\s*/).map(function (el) {\n        return +el == el ? +el : el;\n      });\n\n      if (params.length == 1 && params[0] == 0) {\n        params = [];\n      }\n\n      stops = stops.split(\"-\");\n      stops = stops.map(function (el) {\n        el = el.split(\":\");\n        var out = {\n          color: el[0]\n        };\n\n        if (el[1]) {\n          out.offset = parseFloat(el[1]);\n        }\n\n        return out;\n      });\n      var len = stops.length,\n          start = 0,\n          j = 0;\n\n      function seed(i, end) {\n        var step = (end - start) / (i - j);\n\n        for (var k = j; k < i; k++) {\n          stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n        }\n\n        j = i;\n        start = end;\n      }\n\n      len--;\n\n      for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n        seed(i, stops[i].offset);\n      }\n\n      stops[len].offset = stops[len].offset || 100;\n      seed(len, stops[len].offset);\n      return {\n        type: type,\n        params: params,\n        stops: stops\n      };\n    });\n    eve.on(\"snap.util.attr.d\", function (value) {\n      eve.stop();\n\n      if (is(value, \"array\") && is(value[0], \"array\")) {\n        value = Snap.path.toString.call(value);\n      }\n\n      value = Str(value);\n\n      if (value.match(/[ruo]/i)) {\n        value = Snap.path.toAbsolute(value);\n      }\n\n      $(this.node, {\n        d: value\n      });\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n      eve.stop();\n      value = Str(value);\n      var txt = glob.doc.createTextNode(value);\n\n      while (this.node.firstChild) {\n        this.node.removeChild(this.node.firstChild);\n      }\n\n      this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n      eve.stop();\n      this.attr({\n        d: value\n      });\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n      eve.stop();\n      this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n      var vb;\n\n      if (is(value, \"object\") && \"x\" in value) {\n        vb = [value.x, value.y, value.width, value.height].join(\" \");\n      } else if (is(value, \"array\")) {\n        vb = value.join(\" \");\n      } else {\n        vb = value;\n      }\n\n      $(this.node, {\n        viewBox: vb\n      });\n      eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n      this.transform(value);\n      eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n      if (this.type == \"rect\") {\n        eve.stop();\n        $(this.node, {\n          rx: value,\n          ry: value\n        });\n      }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n      eve.stop();\n\n      if (this.type == \"text\") {\n        var id, tp, node;\n\n        if (!value && this.textPath) {\n          tp = this.textPath;\n\n          while (tp.node.firstChild) {\n            this.node.appendChild(tp.node.firstChild);\n          }\n\n          tp.remove();\n          delete this.textPath;\n          return;\n        }\n\n        if (is(value, \"string\")) {\n          var defs = getSomeDefs(this),\n              path = wrap(defs.parentNode).path(value);\n          defs.appendChild(path.node);\n          id = path.id;\n          path.attr({\n            id: id\n          });\n        } else {\n          value = wrap(value);\n\n          if (value instanceof Element) {\n            id = value.attr(\"id\");\n\n            if (!id) {\n              id = value.id;\n              value.attr({\n                id: id\n              });\n            }\n          }\n        }\n\n        if (id) {\n          tp = this.textPath;\n          node = this.node;\n\n          if (tp) {\n            tp.attr({\n              \"xlink:href\": \"#\" + id\n            });\n          } else {\n            tp = $(\"textPath\", {\n              \"xlink:href\": \"#\" + id\n            });\n\n            while (node.firstChild) {\n              tp.appendChild(node.firstChild);\n            }\n\n            node.appendChild(tp);\n            this.textPath = wrap(tp);\n          }\n        }\n      }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n      if (this.type == \"text\") {\n        var i = 0,\n            node = this.node,\n            tuner = function (chunk) {\n          var out = $(\"tspan\");\n\n          if (is(chunk, \"array\")) {\n            for (var i = 0; i < chunk.length; i++) {\n              out.appendChild(tuner(chunk[i]));\n            }\n          } else {\n            out.appendChild(glob.doc.createTextNode(chunk));\n          }\n\n          out.normalize && out.normalize();\n          return out;\n        };\n\n        while (node.firstChild) {\n          node.removeChild(node.firstChild);\n        }\n\n        var tuned = tuner(value);\n\n        while (tuned.firstChild) {\n          node.appendChild(tuned.firstChild);\n        }\n      }\n\n      eve.stop();\n    })(-1);\n\n    function setFontSize(value) {\n      eve.stop();\n\n      if (value == +value) {\n        value += \"px\";\n      }\n\n      this.node.style.fontSize = value;\n    }\n\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n    eve.on(\"snap.util.getattr.transform\", function () {\n      eve.stop();\n      return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n      eve.stop();\n      return this.textPath;\n    })(-1); // Markers\n\n    (function () {\n      function getter(end) {\n        return function () {\n          eve.stop();\n          var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n\n          if (style == \"none\") {\n            return style;\n          } else {\n            return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n          }\n        };\n      }\n\n      function setter(end) {\n        return function (value) {\n          eve.stop();\n          var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n\n          if (value == \"\" || !value) {\n            this.node.style[name] = \"none\";\n            return;\n          }\n\n          if (value.type == \"marker\") {\n            var id = value.node.id;\n\n            if (!id) {\n              $(value.node, {\n                id: value.id\n              });\n            }\n\n            this.node.style[name] = URL(id);\n            return;\n          }\n        };\n      }\n\n      eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n      eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n      eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n      eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n      eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n      eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n      eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n      eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n      eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n      eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n      eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n      eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    })();\n\n    eve.on(\"snap.util.getattr.r\", function () {\n      if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n        eve.stop();\n        return $(this.node, \"rx\");\n      }\n    })(-1);\n\n    function textExtract(node) {\n      var out = [];\n      var children = node.childNodes;\n\n      for (var i = 0, ii = children.length; i < ii; i++) {\n        var chi = children[i];\n\n        if (chi.nodeType == 3) {\n          out.push(chi.nodeValue);\n        }\n\n        if (chi.tagName == \"tspan\") {\n          if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n            out.push(chi.firstChild.nodeValue);\n          } else {\n            out.push(textExtract(chi));\n          }\n        }\n      }\n\n      return out;\n    }\n\n    eve.on(\"snap.util.getattr.text\", function () {\n      if (this.type == \"text\" || this.type == \"tspan\") {\n        eve.stop();\n        var out = textExtract(this.node);\n        return out.length == 1 ? out[0] : out;\n      }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n      return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n      if (internal) {\n        return;\n      }\n\n      eve.stop();\n      var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n      return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n      if (internal) {\n        return;\n      }\n\n      eve.stop();\n      var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n      return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n      eve.stop();\n      var vb = $(this.node, \"viewBox\");\n\n      if (vb) {\n        vb = vb.split(separator);\n        return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n      } else {\n        return;\n      }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n      var p = $(this.node, \"points\");\n      eve.stop();\n\n      if (p) {\n        return p.split(separator);\n      } else {\n        return;\n      }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n      var p = $(this.node, \"d\");\n      eve.stop();\n      return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n      return this.node.className.baseVal;\n    })(-1);\n\n    function getFontSize() {\n      eve.stop();\n      return this.node.style.fontSize;\n    }\n\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n  }); // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n\n    elproto.addClass = function (value) {\n      var classes = Str(value || \"\").match(rgNotSpace) || [],\n          elem = this.node,\n          className = elem.className.baseVal,\n          curClasses = className.match(rgNotSpace) || [],\n          j,\n          pos,\n          clazz,\n          finalValue;\n\n      if (classes.length) {\n        j = 0;\n\n        while (clazz = classes[j++]) {\n          pos = curClasses.indexOf(clazz);\n\n          if (!~pos) {\n            curClasses.push(clazz);\n          }\n        }\n\n        finalValue = curClasses.join(\" \");\n\n        if (className != finalValue) {\n          elem.className.baseVal = finalValue;\n        }\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n\n\n    elproto.removeClass = function (value) {\n      var classes = Str(value || \"\").match(rgNotSpace) || [],\n          elem = this.node,\n          className = elem.className.baseVal,\n          curClasses = className.match(rgNotSpace) || [],\n          j,\n          pos,\n          clazz,\n          finalValue;\n\n      if (curClasses.length) {\n        j = 0;\n\n        while (clazz = classes[j++]) {\n          pos = curClasses.indexOf(clazz);\n\n          if (~pos) {\n            curClasses.splice(pos, 1);\n          }\n        }\n\n        finalValue = curClasses.join(\" \");\n\n        if (className != finalValue) {\n          elem.className.baseVal = finalValue;\n        }\n      }\n\n      return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n\n\n    elproto.hasClass = function (value) {\n      var elem = this.node,\n          className = elem.className.baseVal,\n          curClasses = className.match(rgNotSpace) || [];\n      return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n\n\n    elproto.toggleClass = function (value, flag) {\n      if (flag != null) {\n        if (flag) {\n          return this.addClass(value);\n        } else {\n          return this.removeClass(value);\n        }\n      }\n\n      var classes = (value || \"\").match(rgNotSpace) || [],\n          elem = this.node,\n          className = elem.className.baseVal,\n          curClasses = className.match(rgNotSpace) || [],\n          j,\n          pos,\n          clazz,\n          finalValue;\n      j = 0;\n\n      while (clazz = classes[j++]) {\n        pos = curClasses.indexOf(clazz);\n\n        if (~pos) {\n          curClasses.splice(pos, 1);\n        } else {\n          curClasses.push(clazz);\n        }\n      }\n\n      finalValue = curClasses.join(\" \");\n\n      if (className != finalValue) {\n        elem.className.baseVal = finalValue;\n      }\n\n      return this;\n    };\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n      \"+\": function (x, y) {\n        return x + y;\n      },\n      \"-\": function (x, y) {\n        return x - y;\n      },\n      \"/\": function (x, y) {\n        return x / y;\n      },\n      \"*\": function (x, y) {\n        return x * y;\n      }\n    },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n\n    function getNumber(val) {\n      return val;\n    }\n\n    function getUnit(unit) {\n      return function (val) {\n        return +val.toFixed(3) + unit;\n      };\n    }\n\n    eve.on(\"snap.util.attr\", function (val) {\n      var plus = Str(val).match(reAddon);\n\n      if (plus) {\n        var evnt = eve.nt(),\n            name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n            a = this.attr(name),\n            atr = {};\n        eve.stop();\n        var unit = plus[3] || \"\",\n            aUnit = a.match(reUnit),\n            op = operators[plus[1]];\n\n        if (aUnit && aUnit == unit) {\n          val = op(parseFloat(a), +plus[2]);\n        } else {\n          a = this.asPX(name);\n          val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n        }\n\n        if (isNaN(a) || isNaN(val)) {\n          return;\n        }\n\n        atr[name] = val;\n        this.attr(atr);\n      }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n      var A,\n          B,\n          a = Str(this.attr(name) || \"\"),\n          el = this,\n          bplus = Str(b).match(reAddon);\n\n      if (bplus) {\n        eve.stop();\n        var unit = bplus[3] || \"\",\n            aUnit = a.match(reUnit),\n            op = operators[bplus[1]];\n\n        if (aUnit && aUnit == unit) {\n          return {\n            from: parseFloat(a),\n            to: op(parseFloat(a), +bplus[2]),\n            f: getUnit(aUnit)\n          };\n        } else {\n          a = this.asPX(name);\n          return {\n            from: a,\n            to: op(a, this.asPX(name, bplus[2] + unit)),\n            f: getNumber\n          };\n        }\n      }\n    })(-10);\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n\n    proto.rect = function (x, y, w, h, rx, ry) {\n      var attr;\n\n      if (ry == null) {\n        ry = rx;\n      }\n\n      if (is(x, \"object\") && x == \"[object Object]\") {\n        attr = x;\n      } else if (x != null) {\n        attr = {\n          x: x,\n          y: y,\n          width: w,\n          height: h\n        };\n\n        if (rx != null) {\n          attr.rx = rx;\n          attr.ry = ry;\n        }\n      }\n\n      return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n\n\n    proto.circle = function (cx, cy, r) {\n      var attr;\n\n      if (is(cx, \"object\") && cx == \"[object Object]\") {\n        attr = cx;\n      } else if (cx != null) {\n        attr = {\n          cx: cx,\n          cy: cy,\n          r: r\n        };\n      }\n\n      return this.el(\"circle\", attr);\n    };\n\n    var preload = function () {\n      function onerror() {\n        this.parentNode.removeChild(this);\n      }\n\n      return function (src, f) {\n        var img = glob.doc.createElement(\"img\"),\n            body = glob.doc.body;\n        img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n\n        img.onload = function () {\n          f.call(img);\n          img.onload = img.onerror = null;\n          body.removeChild(img);\n        };\n\n        img.onerror = onerror;\n        body.appendChild(img);\n        img.src = src;\n      };\n    }();\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n\n\n    proto.image = function (src, x, y, width, height) {\n      var el = this.el(\"image\");\n\n      if (is(src, \"object\") && \"src\" in src) {\n        el.attr(src);\n      } else if (src != null) {\n        var set = {\n          \"xlink:href\": src,\n          preserveAspectRatio: \"none\"\n        };\n\n        if (x != null && y != null) {\n          set.x = x;\n          set.y = y;\n        }\n\n        if (width != null && height != null) {\n          set.width = width;\n          set.height = height;\n        } else {\n          preload(src, function () {\n            Snap._.$(el.node, {\n              width: this.offsetWidth,\n              height: this.offsetHeight\n            });\n          });\n        }\n\n        Snap._.$(el.node, set);\n      }\n\n      return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n\n\n    proto.ellipse = function (cx, cy, rx, ry) {\n      var attr;\n\n      if (is(cx, \"object\") && cx == \"[object Object]\") {\n        attr = cx;\n      } else if (cx != null) {\n        attr = {\n          cx: cx,\n          cy: cy,\n          rx: rx,\n          ry: ry\n        };\n      }\n\n      return this.el(\"ellipse\", attr);\n    }; // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n\n\n    proto.path = function (d) {\n      var attr;\n\n      if (is(d, \"object\") && !is(d, \"array\")) {\n        attr = d;\n      } else if (d) {\n        attr = {\n          d: d\n        };\n      }\n\n      return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n\n\n    proto.group = proto.g = function (first) {\n      var attr,\n          el = this.el(\"g\");\n\n      if (arguments.length == 1 && first && !first.type) {\n        el.attr(first);\n      } else if (arguments.length) {\n        el.add(Array.prototype.slice.call(arguments, 0));\n      }\n\n      return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n\n\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n      var attrs = {};\n\n      if (is(x, \"object\") && y == null) {\n        attrs = x;\n      } else {\n        if (x != null) {\n          attrs.x = x;\n        }\n\n        if (y != null) {\n          attrs.y = y;\n        }\n\n        if (width != null) {\n          attrs.width = width;\n        }\n\n        if (height != null) {\n          attrs.height = height;\n        }\n\n        if (vbx != null && vby != null && vbw != null && vbh != null) {\n          attrs.viewBox = [vbx, vby, vbw, vbh];\n        }\n      }\n\n      return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n\n\n    proto.mask = function (first) {\n      var attr,\n          el = this.el(\"mask\");\n\n      if (arguments.length == 1 && first && !first.type) {\n        el.attr(first);\n      } else if (arguments.length) {\n        el.add(Array.prototype.slice.call(arguments, 0));\n      }\n\n      return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n\n\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n      if (is(x, \"object\")) {\n        var attr = x;\n      } else {\n        attr = {\n          patternUnits: \"userSpaceOnUse\"\n        };\n\n        if (x) {\n          attr.x = x;\n        }\n\n        if (y) {\n          attr.y = y;\n        }\n\n        if (width != null) {\n          attr.width = width;\n        }\n\n        if (height != null) {\n          attr.height = height;\n        }\n\n        if (vx != null && vy != null && vw != null && vh != null) {\n          attr.viewBox = [vx, vy, vw, vh];\n        } else {\n          attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n        }\n      }\n\n      return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n\n\n    proto.use = function (id) {\n      if (id != null) {\n        if (id instanceof Element) {\n          if (!id.attr(\"id\")) {\n            id.attr({\n              id: Snap._.id(id)\n            });\n          }\n\n          id = id.attr(\"id\");\n        }\n\n        if (String(id).charAt() == \"#\") {\n          id = id.substring(1);\n        }\n\n        return this.el(\"use\", {\n          \"xlink:href\": \"#\" + id\n        });\n      } else {\n        return Element.prototype.use.call(this);\n      }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n\n\n    proto.symbol = function (vx, vy, vw, vh) {\n      var attr = {};\n\n      if (vx != null && vy != null && vw != null && vh != null) {\n        attr.viewBox = [vx, vy, vw, vh];\n      }\n\n      return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n\n\n    proto.text = function (x, y, text) {\n      var attr = {};\n\n      if (is(x, \"object\")) {\n        attr = x;\n      } else if (x != null) {\n        attr = {\n          x: x,\n          y: y,\n          text: text || \"\"\n        };\n      }\n\n      return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n\n\n    proto.line = function (x1, y1, x2, y2) {\n      var attr = {};\n\n      if (is(x1, \"object\")) {\n        attr = x1;\n      } else if (x1 != null) {\n        attr = {\n          x1: x1,\n          x2: x2,\n          y1: y1,\n          y2: y2\n        };\n      }\n\n      return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n\n\n    proto.polyline = function (points) {\n      if (arguments.length > 1) {\n        points = Array.prototype.slice.call(arguments, 0);\n      }\n\n      var attr = {};\n\n      if (is(points, \"object\") && !is(points, \"array\")) {\n        attr = points;\n      } else if (points != null) {\n        attr = {\n          points: points\n        };\n      }\n\n      return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n\n\n    proto.polygon = function (points) {\n      if (arguments.length > 1) {\n        points = Array.prototype.slice.call(arguments, 0);\n      }\n\n      var attr = {};\n\n      if (is(points, \"object\") && !is(points, \"array\")) {\n        attr = points;\n      } else if (points != null) {\n        attr = {\n          points: points\n        };\n      }\n\n      return this.el(\"polygon\", attr);\n    }; // gradients\n\n\n    (function () {\n      var $ = Snap._.$; // gradients' helpers\n\n      /*\\\n       * Element.stops\n       [ method ]\n       **\n       * Only for gradients!\n       * Returns array of gradient stops elements.\n       = (array) the stops array.\n      \\*/\n\n      function Gstops() {\n        return this.selectAll(\"stop\");\n      }\n      /*\\\n       * Element.addStop\n       [ method ]\n       **\n       * Only for gradients!\n       * Adds another stop to the gradient.\n       - color (string) stops color\n       - offset (number) stops offset 0..100\n       = (object) gradient element\n      \\*/\n\n\n      function GaddStop(color, offset) {\n        var stop = $(\"stop\"),\n            attr = {\n          offset: +offset + \"%\"\n        };\n        color = Snap.color(color);\n        attr[\"stop-color\"] = color.hex;\n\n        if (color.opacity < 1) {\n          attr[\"stop-opacity\"] = color.opacity;\n        }\n\n        $(stop, attr);\n        var stops = this.stops(),\n            inserted;\n\n        for (var i = 0; i < stops.length; i++) {\n          var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n\n          if (stopOffset > offset) {\n            this.node.insertBefore(stop, stops[i].node);\n            inserted = true;\n            break;\n          }\n        }\n\n        if (!inserted) {\n          this.node.appendChild(stop);\n        }\n\n        return this;\n      }\n\n      function GgetBBox() {\n        if (this.type == \"linearGradient\") {\n          var x1 = $(this.node, \"x1\") || 0,\n              x2 = $(this.node, \"x2\") || 1,\n              y1 = $(this.node, \"y1\") || 0,\n              y2 = $(this.node, \"y2\") || 0;\n          return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n        } else {\n          var cx = this.node.cx || .5,\n              cy = this.node.cy || .5,\n              r = this.node.r || 0;\n          return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n        }\n      }\n      /*\\\n       * Element.setStops\n       [ method ]\n       **\n       * Only for gradients!\n       * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n       - str (string) gradient descriptor part after `()`.\n       = (object) gradient element\n       | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n       | g.setStops(\"#fff-#000-#f00-#fc0\");\n      \\*/\n\n\n      function GsetStops(str) {\n        var grad = str,\n            stops = this.stops();\n\n        if (typeof str == \"string\") {\n          grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n        }\n\n        if (!Snap.is(grad, \"array\")) {\n          return;\n        }\n\n        for (var i = 0; i < stops.length; i++) {\n          if (grad[i]) {\n            var color = Snap.color(grad[i].color),\n                attr = {\n              \"offset\": grad[i].offset + \"%\"\n            };\n            attr[\"stop-color\"] = color.hex;\n\n            if (color.opacity < 1) {\n              attr[\"stop-opacity\"] = color.opacity;\n            }\n\n            stops[i].attr(attr);\n          } else {\n            stops[i].remove();\n          }\n        }\n\n        for (i = stops.length; i < grad.length; i++) {\n          this.addStop(grad[i].color, grad[i].offset);\n        }\n\n        return this;\n      }\n\n      function gradient(defs, str) {\n        var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n            el;\n\n        if (!grad) {\n          return null;\n        }\n\n        grad.params.unshift(defs);\n\n        if (grad.type.toLowerCase() == \"l\") {\n          el = gradientLinear.apply(0, grad.params);\n        } else {\n          el = gradientRadial.apply(0, grad.params);\n        }\n\n        if (grad.type != grad.type.toLowerCase()) {\n          $(el.node, {\n            gradientUnits: \"userSpaceOnUse\"\n          });\n        }\n\n        var stops = grad.stops,\n            len = stops.length;\n\n        for (var i = 0; i < len; i++) {\n          var stop = stops[i];\n          el.addStop(stop.color, stop.offset);\n        }\n\n        return el;\n      }\n\n      function gradientLinear(defs, x1, y1, x2, y2) {\n        var el = Snap._.make(\"linearGradient\", defs);\n\n        el.stops = Gstops;\n        el.addStop = GaddStop;\n        el.getBBox = GgetBBox;\n        el.setStops = GsetStops;\n\n        if (x1 != null) {\n          $(el.node, {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n          });\n        }\n\n        return el;\n      }\n\n      function gradientRadial(defs, cx, cy, r, fx, fy) {\n        var el = Snap._.make(\"radialGradient\", defs);\n\n        el.stops = Gstops;\n        el.addStop = GaddStop;\n        el.getBBox = GgetBBox;\n\n        if (cx != null) {\n          $(el.node, {\n            cx: cx,\n            cy: cy,\n            r: r\n          });\n        }\n\n        if (fx != null && fy != null) {\n          $(el.node, {\n            fx: fx,\n            fy: fy\n          });\n        }\n\n        return el;\n      }\n      /*\\\n       * Paper.gradient\n       [ method ]\n       **\n       * Creates a gradient element\n       **\n       - gradient (string) gradient descriptor\n       > Gradient Descriptor\n       * The gradient descriptor is an expression formatted as\n       * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n       * either linear or radial.  The uppercase `L` or `R` letters\n       * indicate absolute coordinates offset from the SVG surface.\n       * Lowercase `l` or `r` letters indicate coordinates\n       * calculated relative to the element to which the gradient is\n       * applied.  Coordinates specify a linear gradient vector as\n       * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n       * `r` and optional `fx`, `fy` specifying a focal point away\n       * from the center of the circle. Specify `<colors>` as a list\n       * of dash-separated CSS color values.  Each color may be\n       * followed by a custom offset value, separated with a colon\n       * character.\n       > Examples\n       * Linear gradient, relative from top-left corner to bottom-right\n       * corner, from black through red to white:\n       | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n       * Linear gradient, absolute from (0, 0) to (100, 100), from black\n       * through red at 25% to white:\n       | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n       * Radial gradient, relative from the center of the element with radius\n       * half the width, from black to white:\n       | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n       * To apply the gradient:\n       | paper.circle(50, 50, 40).attr({\n       |     fill: g\n       | });\n       = (object) the `gradient` element\n      \\*/\n\n\n      proto.gradient = function (str) {\n        return gradient(this.defs, str);\n      };\n\n      proto.gradientLinear = function (x1, y1, x2, y2) {\n        return gradientLinear(this.defs, x1, y1, x2, y2);\n      };\n\n      proto.gradientRadial = function (cx, cy, r, fx, fy) {\n        return gradientRadial(this.defs, cx, cy, r, fx, fy);\n      };\n      /*\\\n       * Paper.toString\n       [ method ]\n       **\n       * Returns SVG code for the @Paper\n       = (string) SVG code for the @Paper\n      \\*/\n\n\n      proto.toString = function () {\n        var doc = this.node.ownerDocument,\n            f = doc.createDocumentFragment(),\n            d = doc.createElement(\"div\"),\n            svg = this.node.cloneNode(true),\n            res;\n        f.appendChild(d);\n        d.appendChild(svg);\n\n        Snap._.$(svg, {\n          xmlns: \"http://www.w3.org/2000/svg\"\n        });\n\n        res = d.innerHTML;\n        f.removeChild(f.firstChild);\n        return res;\n      };\n      /*\\\n       * Paper.toDataURL\n       [ method ]\n       **\n       * Returns SVG code for the @Paper as Data URI string.\n       = (string) Data URI string\n      \\*/\n\n\n      proto.toDataURL = function () {\n        if (window && window.btoa) {\n          return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n        }\n      };\n      /*\\\n       * Paper.clear\n       [ method ]\n       **\n       * Removes all child nodes of the paper, except <defs>.\n      \\*/\n\n\n      proto.clear = function () {\n        var node = this.node.firstChild,\n            next;\n\n        while (node) {\n          next = node.nextSibling;\n\n          if (node.tagName != \"defs\") {\n            node.parentNode.removeChild(node);\n          } else {\n            proto.clear.call({\n              node: node\n            });\n          }\n\n          node = next;\n        }\n      };\n    })();\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n\n    function paths(ps) {\n      var p = paths.ps = paths.ps || {};\n\n      if (p[ps]) {\n        p[ps].sleep = 100;\n      } else {\n        p[ps] = {\n          sleep: 100\n        };\n      }\n\n      setTimeout(function () {\n        for (var key in p) if (p[has](key) && key != ps) {\n          p[key].sleep--;\n          !p[key].sleep && delete p[key];\n        }\n      });\n      return p[ps];\n    }\n\n    function box(x, y, width, height) {\n      if (x == null) {\n        x = y = width = height = 0;\n      }\n\n      if (y == null) {\n        y = x.y;\n        width = x.width;\n        height = x.height;\n        x = x.x;\n      }\n\n      return {\n        x: x,\n        y: y,\n        width: width,\n        w: width,\n        height: height,\n        h: height,\n        x2: x + width,\n        y2: y + height,\n        cx: x + width / 2,\n        cy: y + height / 2,\n        r1: math.min(width, height) / 2,\n        r2: math.max(width, height) / 2,\n        r0: math.sqrt(width * width + height * height) / 2,\n        path: rectPath(x, y, width, height),\n        vb: [x, y, width, height].join(\" \")\n      };\n    }\n\n    function toString() {\n      return this.join(\",\").replace(p2s, \"$1\");\n    }\n\n    function pathClone(pathArray) {\n      var res = clone(pathArray);\n      res.toString = toString;\n      return res;\n    }\n\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n      if (length == null) {\n        return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n      } else {\n        return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n      }\n    }\n\n    function getLengthFactory(istotal, subpath) {\n      function O(val) {\n        return +(+val).toFixed(3);\n      }\n\n      return Snap._.cacher(function (path, length, onlystart) {\n        if (path instanceof Element) {\n          path = path.attr(\"d\");\n        }\n\n        path = path2curve(path);\n        var x,\n            y,\n            p,\n            l,\n            sp = \"\",\n            subpaths = {},\n            point,\n            len = 0;\n\n        for (var i = 0, ii = path.length; i < ii; i++) {\n          p = path[i];\n\n          if (p[0] == \"M\") {\n            x = +p[1];\n            y = +p[2];\n          } else {\n            l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\n            if (len + l > length) {\n              if (subpath && !subpaths.start) {\n                point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                sp += [\"C\" + O(point.start.x), O(point.start.y), O(point.m.x), O(point.m.y), O(point.x), O(point.y)];\n\n                if (onlystart) {\n                  return sp;\n                }\n\n                subpaths.start = sp;\n                sp = [\"M\" + O(point.x), O(point.y) + \"C\" + O(point.n.x), O(point.n.y), O(point.end.x), O(point.end.y), O(p[5]), O(p[6])].join();\n                len += l;\n                x = +p[5];\n                y = +p[6];\n                continue;\n              }\n\n              if (!istotal && !subpath) {\n                point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                return point;\n              }\n            }\n\n            len += l;\n            x = +p[5];\n            y = +p[6];\n          }\n\n          sp += p.shift() + p;\n        }\n\n        subpaths.end = sp;\n        point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n        return point;\n      }, null, Snap._.clone);\n    }\n\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n      var t1 = 1 - t,\n          t13 = pow(t1, 3),\n          t12 = pow(t1, 2),\n          t2 = t * t,\n          t3 = t2 * t,\n          x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n          y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n          mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n          my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n          nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n          ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n          ax = t1 * p1x + t * c1x,\n          ay = t1 * p1y + t * c1y,\n          cx = t1 * c2x + t * p2x,\n          cy = t1 * c2y + t * p2y,\n          alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI; // (mx > nx || my < ny) && (alpha += 180);\n\n      return {\n        x: x,\n        y: y,\n        m: {\n          x: mx,\n          y: my\n        },\n        n: {\n          x: nx,\n          y: ny\n        },\n        start: {\n          x: ax,\n          y: ay\n        },\n        end: {\n          x: cx,\n          y: cy\n        },\n        alpha: alpha\n      };\n    }\n\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n      if (!Snap.is(p1x, \"array\")) {\n        p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n      }\n\n      var bbox = curveDim.apply(null, p1x);\n      return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n    }\n\n    function isPointInsideBBox(bbox, x, y) {\n      return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n    }\n\n    function isBBoxIntersect(bbox1, bbox2) {\n      bbox1 = box(bbox1);\n      bbox2 = box(bbox2);\n      return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n\n    function base3(t, p1, p2, p3, p4) {\n      var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n          t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n      return t * t2 - 3 * p1 + 3 * p2;\n    }\n\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n      if (z == null) {\n        z = 1;\n      }\n\n      z = z > 1 ? 1 : z < 0 ? 0 : z;\n      var z2 = z / 2,\n          n = 12,\n          Tvalues = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816],\n          Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472],\n          sum = 0;\n\n      for (var i = 0; i < n; i++) {\n        var ct = z2 * Tvalues[i] + z2,\n            xbase = base3(ct, x1, x2, x3, x4),\n            ybase = base3(ct, y1, y2, y3, y4),\n            comb = xbase * xbase + ybase * ybase;\n        sum += Cvalues[i] * math.sqrt(comb);\n      }\n\n      return z2 * sum;\n    }\n\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n      if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n        return;\n      }\n\n      var t = 1,\n          step = t / 2,\n          t2 = t - step,\n          l,\n          e = .01;\n      l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\n      while (abs(l - ll) > e) {\n        step /= 2;\n        t2 += (l < ll ? 1 : -1) * step;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n      }\n\n      return t2;\n    }\n\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n      if (mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4)) {\n        return;\n      }\n\n      var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n          ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n          denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n      if (!denominator) {\n        return;\n      }\n\n      var px = nx / denominator,\n          py = ny / denominator,\n          px2 = +px.toFixed(2),\n          py2 = +py.toFixed(2);\n\n      if (px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2)) {\n        return;\n      }\n\n      return {\n        x: px,\n        y: py\n      };\n    }\n\n    function inter(bez1, bez2) {\n      return interHelper(bez1, bez2);\n    }\n\n    function interCount(bez1, bez2) {\n      return interHelper(bez1, bez2, 1);\n    }\n\n    function interHelper(bez1, bez2, justCount) {\n      var bbox1 = bezierBBox(bez1),\n          bbox2 = bezierBBox(bez2);\n\n      if (!isBBoxIntersect(bbox1, bbox2)) {\n        return justCount ? 0 : [];\n      }\n\n      var l1 = bezlen.apply(0, bez1),\n          l2 = bezlen.apply(0, bez2),\n          n1 = ~~(l1 / 8),\n          n2 = ~~(l2 / 8),\n          dots1 = [],\n          dots2 = [],\n          xy = {},\n          res = justCount ? 0 : [];\n\n      for (var i = 0; i < n1 + 1; i++) {\n        var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n        dots1.push({\n          x: p.x,\n          y: p.y,\n          t: i / n1\n        });\n      }\n\n      for (i = 0; i < n2 + 1; i++) {\n        p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n        dots2.push({\n          x: p.x,\n          y: p.y,\n          t: i / n2\n        });\n      }\n\n      for (i = 0; i < n1; i++) {\n        for (var j = 0; j < n2; j++) {\n          var di = dots1[i],\n              di1 = dots1[i + 1],\n              dj = dots2[j],\n              dj1 = dots2[j + 1],\n              ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n              cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n              is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n          if (is) {\n            if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n              continue;\n            }\n\n            xy[is.x.toFixed(4)] = is.y.toFixed(4);\n            var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n            if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n              if (justCount) {\n                res++;\n              } else {\n                res.push({\n                  x: is.x,\n                  y: is.y,\n                  t1: t1,\n                  t2: t2\n                });\n              }\n            }\n          }\n        }\n      }\n\n      return res;\n    }\n\n    function pathIntersection(path1, path2) {\n      return interPathHelper(path1, path2);\n    }\n\n    function pathIntersectionNumber(path1, path2) {\n      return interPathHelper(path1, path2, 1);\n    }\n\n    function interPathHelper(path1, path2, justCount) {\n      path1 = path2curve(path1);\n      path2 = path2curve(path2);\n      var x1,\n          y1,\n          x2,\n          y2,\n          x1m,\n          y1m,\n          x2m,\n          y2m,\n          bez1,\n          bez2,\n          res = justCount ? 0 : [];\n\n      for (var i = 0, ii = path1.length; i < ii; i++) {\n        var pi = path1[i];\n\n        if (pi[0] == \"M\") {\n          x1 = x1m = pi[1];\n          y1 = y1m = pi[2];\n        } else {\n          if (pi[0] == \"C\") {\n            bez1 = [x1, y1].concat(pi.slice(1));\n            x1 = bez1[6];\n            y1 = bez1[7];\n          } else {\n            bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n            x1 = x1m;\n            y1 = y1m;\n          }\n\n          for (var j = 0, jj = path2.length; j < jj; j++) {\n            var pj = path2[j];\n\n            if (pj[0] == \"M\") {\n              x2 = x2m = pj[1];\n              y2 = y2m = pj[2];\n            } else {\n              if (pj[0] == \"C\") {\n                bez2 = [x2, y2].concat(pj.slice(1));\n                x2 = bez2[6];\n                y2 = bez2[7];\n              } else {\n                bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                x2 = x2m;\n                y2 = y2m;\n              }\n\n              var intr = interHelper(bez1, bez2, justCount);\n\n              if (justCount) {\n                res += intr;\n              } else {\n                for (var k = 0, kk = intr.length; k < kk; k++) {\n                  intr[k].segment1 = i;\n                  intr[k].segment2 = j;\n                  intr[k].bez1 = bez1;\n                  intr[k].bez2 = bez2;\n                }\n\n                res = res.concat(intr);\n              }\n            }\n          }\n        }\n      }\n\n      return res;\n    }\n\n    function isPointInsidePath(path, x, y) {\n      var bbox = pathBBox(path);\n      return isPointInsideBBox(bbox, x, y) && interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n\n    function pathBBox(path) {\n      var pth = paths(path);\n\n      if (pth.bbox) {\n        return clone(pth.bbox);\n      }\n\n      if (!path) {\n        return box();\n      }\n\n      path = path2curve(path);\n      var x = 0,\n          y = 0,\n          X = [],\n          Y = [],\n          p;\n\n      for (var i = 0, ii = path.length; i < ii; i++) {\n        p = path[i];\n\n        if (p[0] == \"M\") {\n          x = p[1];\n          y = p[2];\n          X.push(x);\n          Y.push(y);\n        } else {\n          var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n          X = X.concat(dim.min.x, dim.max.x);\n          Y = Y.concat(dim.min.y, dim.max.y);\n          x = p[5];\n          y = p[6];\n        }\n      }\n\n      var xmin = mmin.apply(0, X),\n          ymin = mmin.apply(0, Y),\n          xmax = mmax.apply(0, X),\n          ymax = mmax.apply(0, Y),\n          bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n      pth.bbox = clone(bb);\n      return bb;\n    }\n\n    function rectPath(x, y, w, h, r) {\n      if (r) {\n        return [[\"M\", +x + +r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n      }\n\n      var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n      res.toString = toString;\n      return res;\n    }\n\n    function ellipsePath(x, y, rx, ry, a) {\n      if (a == null && ry == null) {\n        ry = rx;\n      }\n\n      x = +x;\n      y = +y;\n      rx = +rx;\n      ry = +ry;\n\n      if (a != null) {\n        var rad = Math.PI / 180,\n            x1 = x + rx * Math.cos(-ry * rad),\n            x2 = x + rx * Math.cos(-a * rad),\n            y1 = y + rx * Math.sin(-ry * rad),\n            y2 = y + rx * Math.sin(-a * rad),\n            res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n      } else {\n        res = [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n      }\n\n      res.toString = toString;\n      return res;\n    }\n\n    var unit2px = Snap._unit2px,\n        getPath = {\n      path: function (el) {\n        return el.attr(\"path\");\n      },\n      circle: function (el) {\n        var attr = unit2px(el);\n        return ellipsePath(attr.cx, attr.cy, attr.r);\n      },\n      ellipse: function (el) {\n        var attr = unit2px(el);\n        return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n      },\n      rect: function (el) {\n        var attr = unit2px(el);\n        return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n      },\n      image: function (el) {\n        var attr = unit2px(el);\n        return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n      },\n      line: function (el) {\n        return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n      },\n      polyline: function (el) {\n        return \"M\" + el.attr(\"points\");\n      },\n      polygon: function (el) {\n        return \"M\" + el.attr(\"points\") + \"z\";\n      },\n      deflt: function (el) {\n        var bbox = el.node.getBBox();\n        return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n      }\n    };\n\n    function pathToRelative(pathArray) {\n      var pth = paths(pathArray),\n          lowerCase = String.prototype.toLowerCase;\n\n      if (pth.rel) {\n        return pathClone(pth.rel);\n      }\n\n      if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n        pathArray = Snap.parsePathString(pathArray);\n      }\n\n      var res = [],\n          x = 0,\n          y = 0,\n          mx = 0,\n          my = 0,\n          start = 0;\n\n      if (pathArray[0][0] == \"M\") {\n        x = pathArray[0][1];\n        y = pathArray[0][2];\n        mx = x;\n        my = y;\n        start++;\n        res.push([\"M\", x, y]);\n      }\n\n      for (var i = start, ii = pathArray.length; i < ii; i++) {\n        var r = res[i] = [],\n            pa = pathArray[i];\n\n        if (pa[0] != lowerCase.call(pa[0])) {\n          r[0] = lowerCase.call(pa[0]);\n\n          switch (r[0]) {\n            case \"a\":\n              r[1] = pa[1];\n              r[2] = pa[2];\n              r[3] = pa[3];\n              r[4] = pa[4];\n              r[5] = pa[5];\n              r[6] = +(pa[6] - x).toFixed(3);\n              r[7] = +(pa[7] - y).toFixed(3);\n              break;\n\n            case \"v\":\n              r[1] = +(pa[1] - y).toFixed(3);\n              break;\n\n            case \"m\":\n              mx = pa[1];\n              my = pa[2];\n\n            default:\n              for (var j = 1, jj = pa.length; j < jj; j++) {\n                r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n              }\n\n          }\n        } else {\n          r = res[i] = [];\n\n          if (pa[0] == \"m\") {\n            mx = pa[1] + x;\n            my = pa[2] + y;\n          }\n\n          for (var k = 0, kk = pa.length; k < kk; k++) {\n            res[i][k] = pa[k];\n          }\n        }\n\n        var len = res[i].length;\n\n        switch (res[i][0]) {\n          case \"z\":\n            x = mx;\n            y = my;\n            break;\n\n          case \"h\":\n            x += +res[i][len - 1];\n            break;\n\n          case \"v\":\n            y += +res[i][len - 1];\n            break;\n\n          default:\n            x += +res[i][len - 2];\n            y += +res[i][len - 1];\n        }\n      }\n\n      res.toString = toString;\n      pth.rel = pathClone(res);\n      return res;\n    }\n\n    function pathToAbsolute(pathArray) {\n      var pth = paths(pathArray);\n\n      if (pth.abs) {\n        return pathClone(pth.abs);\n      }\n\n      if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) {\n        // rough assumption\n        pathArray = Snap.parsePathString(pathArray);\n      }\n\n      if (!pathArray || !pathArray.length) {\n        return [[\"M\", 0, 0]];\n      }\n\n      var res = [],\n          x = 0,\n          y = 0,\n          mx = 0,\n          my = 0,\n          start = 0,\n          pa0;\n\n      if (pathArray[0][0] == \"M\") {\n        x = +pathArray[0][1];\n        y = +pathArray[0][2];\n        mx = x;\n        my = y;\n        start++;\n        res[0] = [\"M\", x, y];\n      }\n\n      var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n\n      for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n        res.push(r = []);\n        pa = pathArray[i];\n        pa0 = pa[0];\n\n        if (pa0 != pa0.toUpperCase()) {\n          r[0] = pa0.toUpperCase();\n\n          switch (r[0]) {\n            case \"A\":\n              r[1] = pa[1];\n              r[2] = pa[2];\n              r[3] = pa[3];\n              r[4] = pa[4];\n              r[5] = pa[5];\n              r[6] = +pa[6] + x;\n              r[7] = +pa[7] + y;\n              break;\n\n            case \"V\":\n              r[1] = +pa[1] + y;\n              break;\n\n            case \"H\":\n              r[1] = +pa[1] + x;\n              break;\n\n            case \"R\":\n              var dots = [x, y].concat(pa.slice(1));\n\n              for (var j = 2, jj = dots.length; j < jj; j++) {\n                dots[j] = +dots[j] + x;\n                dots[++j] = +dots[j] + y;\n              }\n\n              res.pop();\n              res = res.concat(catmullRom2bezier(dots, crz));\n              break;\n\n            case \"O\":\n              res.pop();\n              dots = ellipsePath(x, y, pa[1], pa[2]);\n              dots.push(dots[0]);\n              res = res.concat(dots);\n              break;\n\n            case \"U\":\n              res.pop();\n              res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n              r = [\"U\"].concat(res[res.length - 1].slice(-2));\n              break;\n\n            case \"M\":\n              mx = +pa[1] + x;\n              my = +pa[2] + y;\n\n            default:\n              for (j = 1, jj = pa.length; j < jj; j++) {\n                r[j] = +pa[j] + (j % 2 ? x : y);\n              }\n\n          }\n        } else if (pa0 == \"R\") {\n          dots = [x, y].concat(pa.slice(1));\n          res.pop();\n          res = res.concat(catmullRom2bezier(dots, crz));\n          r = [\"R\"].concat(pa.slice(-2));\n        } else if (pa0 == \"O\") {\n          res.pop();\n          dots = ellipsePath(x, y, pa[1], pa[2]);\n          dots.push(dots[0]);\n          res = res.concat(dots);\n        } else if (pa0 == \"U\") {\n          res.pop();\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n          r = [\"U\"].concat(res[res.length - 1].slice(-2));\n        } else {\n          for (var k = 0, kk = pa.length; k < kk; k++) {\n            r[k] = pa[k];\n          }\n        }\n\n        pa0 = pa0.toUpperCase();\n\n        if (pa0 != \"O\") {\n          switch (r[0]) {\n            case \"Z\":\n              x = +mx;\n              y = +my;\n              break;\n\n            case \"H\":\n              x = r[1];\n              break;\n\n            case \"V\":\n              y = r[1];\n              break;\n\n            case \"M\":\n              mx = r[r.length - 2];\n              my = r[r.length - 1];\n\n            default:\n              x = r[r.length - 2];\n              y = r[r.length - 1];\n          }\n        }\n      }\n\n      res.toString = toString;\n      pth.abs = pathClone(res);\n      return res;\n    }\n\n    function l2c(x1, y1, x2, y2) {\n      return [x1, y1, x2, y2, x2, y2];\n    }\n\n    function q2c(x1, y1, ax, ay, x2, y2) {\n      var _13 = 1 / 3,\n          _23 = 2 / 3;\n\n      return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n    }\n\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n      // for more information of where this math came from visit:\n      // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n      var _120 = PI * 120 / 180,\n          rad = PI / 180 * (+angle || 0),\n          res = [],\n          xy,\n          rotate = Snap._.cacher(function (x, y, rad) {\n        var X = x * math.cos(rad) - y * math.sin(rad),\n            Y = x * math.sin(rad) + y * math.cos(rad);\n        return {\n          x: X,\n          y: Y\n        };\n      });\n\n      if (!rx || !ry) {\n        return [x1, y1, x2, y2, x2, y2];\n      }\n\n      if (!recursive) {\n        xy = rotate(x1, y1, -rad);\n        x1 = xy.x;\n        y1 = xy.y;\n        xy = rotate(x2, y2, -rad);\n        x2 = xy.x;\n        y2 = xy.y;\n        var cos = math.cos(PI / 180 * angle),\n            sin = math.sin(PI / 180 * angle),\n            x = (x1 - x2) / 2,\n            y = (y1 - y2) / 2;\n        var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n        if (h > 1) {\n          h = math.sqrt(h);\n          rx = h * rx;\n          ry = h * ry;\n        }\n\n        var rx2 = rx * rx,\n            ry2 = ry * ry,\n            k = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n            cx = k * rx * y / ry + (x1 + x2) / 2,\n            cy = k * -ry * x / rx + (y1 + y2) / 2,\n            f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n            f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n        f1 = x1 < cx ? PI - f1 : f1;\n        f2 = x2 < cx ? PI - f2 : f2;\n        f1 < 0 && (f1 = PI * 2 + f1);\n        f2 < 0 && (f2 = PI * 2 + f2);\n\n        if (sweep_flag && f1 > f2) {\n          f1 = f1 - PI * 2;\n        }\n\n        if (!sweep_flag && f2 > f1) {\n          f2 = f2 - PI * 2;\n        }\n      } else {\n        f1 = recursive[0];\n        f2 = recursive[1];\n        cx = recursive[2];\n        cy = recursive[3];\n      }\n\n      var df = f2 - f1;\n\n      if (abs(df) > _120) {\n        var f2old = f2,\n            x2old = x2,\n            y2old = y2;\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n        x2 = cx + rx * math.cos(f2);\n        y2 = cy + ry * math.sin(f2);\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n      }\n\n      df = f2 - f1;\n      var c1 = math.cos(f1),\n          s1 = math.sin(f1),\n          c2 = math.cos(f2),\n          s2 = math.sin(f2),\n          t = math.tan(df / 4),\n          hx = 4 / 3 * rx * t,\n          hy = 4 / 3 * ry * t,\n          m1 = [x1, y1],\n          m2 = [x1 + hx * s1, y1 - hy * c1],\n          m3 = [x2 + hx * s2, y2 - hy * c2],\n          m4 = [x2, y2];\n      m2[0] = 2 * m1[0] - m2[0];\n      m2[1] = 2 * m1[1] - m2[1];\n\n      if (recursive) {\n        return [m2, m3, m4].concat(res);\n      } else {\n        res = [m2, m3, m4].concat(res).join().split(\",\");\n        var newres = [];\n\n        for (var i = 0, ii = res.length; i < ii; i++) {\n          newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n        }\n\n        return newres;\n      }\n    }\n\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n      var t1 = 1 - t;\n      return {\n        x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n        y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n      };\n    } // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n\n\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n      var tvalues = [],\n          bounds = [[], []],\n          a,\n          b,\n          c,\n          t,\n          t1,\n          t2,\n          b2ac,\n          sqrtb2ac;\n\n      for (var i = 0; i < 2; ++i) {\n        if (i == 0) {\n          b = 6 * x0 - 12 * x1 + 6 * x2;\n          a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n          c = 3 * x1 - 3 * x0;\n        } else {\n          b = 6 * y0 - 12 * y1 + 6 * y2;\n          a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n          c = 3 * y1 - 3 * y0;\n        }\n\n        if (abs(a) < 1e-12) {\n          if (abs(b) < 1e-12) {\n            continue;\n          }\n\n          t = -c / b;\n\n          if (0 < t && t < 1) {\n            tvalues.push(t);\n          }\n\n          continue;\n        }\n\n        b2ac = b * b - 4 * c * a;\n        sqrtb2ac = math.sqrt(b2ac);\n\n        if (b2ac < 0) {\n          continue;\n        }\n\n        t1 = (-b + sqrtb2ac) / (2 * a);\n\n        if (0 < t1 && t1 < 1) {\n          tvalues.push(t1);\n        }\n\n        t2 = (-b - sqrtb2ac) / (2 * a);\n\n        if (0 < t2 && t2 < 1) {\n          tvalues.push(t2);\n        }\n      }\n\n      var x,\n          y,\n          j = tvalues.length,\n          jlen = j,\n          mt;\n\n      while (j--) {\n        t = tvalues[j];\n        mt = 1 - t;\n        bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n        bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n      }\n\n      bounds[0][jlen] = x0;\n      bounds[1][jlen] = y0;\n      bounds[0][jlen + 1] = x3;\n      bounds[1][jlen + 1] = y3;\n      bounds[0].length = bounds[1].length = jlen + 2;\n      return {\n        min: {\n          x: mmin.apply(0, bounds[0]),\n          y: mmin.apply(0, bounds[1])\n        },\n        max: {\n          x: mmax.apply(0, bounds[0]),\n          y: mmax.apply(0, bounds[1])\n        }\n      };\n    }\n\n    function path2curve(path, path2) {\n      var pth = !path2 && paths(path);\n\n      if (!path2 && pth.curve) {\n        return pathClone(pth.curve);\n      }\n\n      var p = pathToAbsolute(path),\n          p2 = path2 && pathToAbsolute(path2),\n          attrs = {\n        x: 0,\n        y: 0,\n        bx: 0,\n        by: 0,\n        X: 0,\n        Y: 0,\n        qx: null,\n        qy: null\n      },\n          attrs2 = {\n        x: 0,\n        y: 0,\n        bx: 0,\n        by: 0,\n        X: 0,\n        Y: 0,\n        qx: null,\n        qy: null\n      },\n          processPath = function (path, d, pcom) {\n        var nx, ny;\n\n        if (!path) {\n          return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n        }\n\n        !(path[0] in {\n          T: 1,\n          Q: 1\n        }) && (d.qx = d.qy = null);\n\n        switch (path[0]) {\n          case \"M\":\n            d.X = path[1];\n            d.Y = path[2];\n            break;\n\n          case \"A\":\n            path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n            break;\n\n          case \"S\":\n            if (pcom == \"C\" || pcom == \"S\") {\n              // In \"S\" case we have to take into account, if the previous command is C/S.\n              nx = d.x * 2 - d.bx; // And reflect the previous\n\n              ny = d.y * 2 - d.by; // command's control point relative to the current point.\n            } else {\n              // or some else or nothing\n              nx = d.x;\n              ny = d.y;\n            }\n\n            path = [\"C\", nx, ny].concat(path.slice(1));\n            break;\n\n          case \"T\":\n            if (pcom == \"Q\" || pcom == \"T\") {\n              // In \"T\" case we have to take into account, if the previous command is Q/T.\n              d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n              d.qy = d.y * 2 - d.qy; // to case \"S\".\n            } else {\n              // or something else or nothing\n              d.qx = d.x;\n              d.qy = d.y;\n            }\n\n            path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n            break;\n\n          case \"Q\":\n            d.qx = path[1];\n            d.qy = path[2];\n            path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n            break;\n\n          case \"L\":\n            path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n            break;\n\n          case \"H\":\n            path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n            break;\n\n          case \"V\":\n            path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n            break;\n\n          case \"Z\":\n            path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n            break;\n        }\n\n        return path;\n      },\n          fixArc = function (pp, i) {\n        if (pp[i].length > 7) {\n          pp[i].shift();\n          var pi = pp[i];\n\n          while (pi.length) {\n            pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n\n            p2 && (pcoms2[i] = \"A\"); // the same as above\n\n            pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n          }\n\n          pp.splice(i, 1);\n          ii = mmax(p.length, p2 && p2.length || 0);\n        }\n      },\n          fixM = function (path1, path2, a1, a2, i) {\n        if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n          path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n          a1.bx = 0;\n          a1.by = 0;\n          a1.x = path1[i][1];\n          a1.y = path1[i][2];\n          ii = mmax(p.length, p2 && p2.length || 0);\n        }\n      },\n          pcoms1 = [],\n          // path commands of original path p\n      pcoms2 = [],\n          // path commands of original path p2\n      pfirst = \"\",\n          // temporary holder for original path command\n      pcom = \"\"; // holder for previous path command of original path\n\n\n      for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n        p[i] && (pfirst = p[i][0]); // save current path command\n\n        if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n          {\n            pcoms1[i] = pfirst; // Save current path command\n\n            i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n          }\n\n        p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n        if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n        // which may produce multiple C:s\n        // so we have to make sure that C is also C in original path\n\n        fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n        if (p2) {\n          // the same procedures is done to p2\n          p2[i] && (pfirst = p2[i][0]);\n\n          if (pfirst != \"C\") {\n            pcoms2[i] = pfirst;\n            i && (pcom = pcoms2[i - 1]);\n          }\n\n          p2[i] = processPath(p2[i], attrs2, pcom);\n\n          if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n            pcoms2[i] = \"C\";\n          }\n\n          fixArc(p2, i);\n        }\n\n        fixM(p, p2, attrs, attrs2, i);\n        fixM(p2, p, attrs2, attrs, i);\n        var seg = p[i],\n            seg2 = p2 && p2[i],\n            seglen = seg.length,\n            seg2len = p2 && seg2.length;\n        attrs.x = seg[seglen - 2];\n        attrs.y = seg[seglen - 1];\n        attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n        attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n        attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n        attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n        attrs2.x = p2 && seg2[seg2len - 2];\n        attrs2.y = p2 && seg2[seg2len - 1];\n      }\n\n      if (!p2) {\n        pth.curve = pathClone(p);\n      }\n\n      return p2 ? [p, p2] : p;\n    }\n\n    function mapPath(path, matrix) {\n      if (!matrix) {\n        return path;\n      }\n\n      var x, y, i, j, ii, jj, pathi;\n      path = path2curve(path);\n\n      for (i = 0, ii = path.length; i < ii; i++) {\n        pathi = path[i];\n\n        for (j = 1, jj = pathi.length; j < jj; j += 2) {\n          x = matrix.x(pathi[j], pathi[j + 1]);\n          y = matrix.y(pathi[j], pathi[j + 1]);\n          pathi[j] = x;\n          pathi[j + 1] = y;\n        }\n      }\n\n      return path;\n    } // http://schepers.cc/getting-to-the-point\n\n\n    function catmullRom2bezier(crp, z) {\n      var d = [];\n\n      for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n        var p = [{\n          x: +crp[i - 2],\n          y: +crp[i - 1]\n        }, {\n          x: +crp[i],\n          y: +crp[i + 1]\n        }, {\n          x: +crp[i + 2],\n          y: +crp[i + 3]\n        }, {\n          x: +crp[i + 4],\n          y: +crp[i + 5]\n        }];\n\n        if (z) {\n          if (!i) {\n            p[0] = {\n              x: +crp[iLen - 2],\n              y: +crp[iLen - 1]\n            };\n          } else if (iLen - 4 == i) {\n            p[3] = {\n              x: +crp[0],\n              y: +crp[1]\n            };\n          } else if (iLen - 2 == i) {\n            p[2] = {\n              x: +crp[0],\n              y: +crp[1]\n            };\n            p[3] = {\n              x: +crp[2],\n              y: +crp[3]\n            };\n          }\n        } else {\n          if (iLen - 4 == i) {\n            p[3] = p[2];\n          } else if (!i) {\n            p[0] = {\n              x: +crp[i],\n              y: +crp[i + 1]\n            };\n          }\n        }\n\n        d.push([\"C\", (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n      }\n\n      return d;\n    } // export\n\n\n    Snap.path = paths;\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n\n    Snap.path.getSubpath = function (path, from, to) {\n      if (this.getTotalLength(path) - to < 1e-6) {\n        return getSubpathsAtLength(path, from).end;\n      }\n\n      var a = getSubpathsAtLength(path, to, 1);\n      return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n\n\n    elproto.getTotalLength = function () {\n      if (this.node.getTotalLength) {\n        return this.node.getTotalLength();\n      }\n    }; // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n\n\n    elproto.getPointAtLength = function (length) {\n      return getPointAtLength(this.attr(\"d\"), length);\n    }; // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n\n\n    elproto.getSubpath = function (from, to) {\n      return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n\n    Snap.closest = function (x, y, X, Y) {\n      var r = 100,\n          b = box(x - r / 2, y - r / 2, r, r),\n          inside = [],\n          getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n        return {\n          x: X[i].x,\n          y: X[i].y\n        };\n      } : function (i) {\n        return {\n          x: X[i],\n          y: Y[i]\n        };\n      },\n          found = 0;\n\n      while (r <= 1e6 && !found) {\n        for (var i = 0, ii = X.length; i < ii; i++) {\n          var xy = getter(i);\n\n          if (isPointInsideBBox(b, xy.x, xy.y)) {\n            found++;\n            inside.push(xy);\n            break;\n          }\n        }\n\n        if (!found) {\n          r *= 2;\n          b = box(x - r / 2, y - r / 2, r, r);\n        }\n      }\n\n      if (r == 1e6) {\n        return;\n      }\n\n      var len = Infinity,\n          res;\n\n      for (i = 0, ii = inside.length; i < ii; i++) {\n        var l = Snap.len(x, y, inside[i].x, inside[i].y);\n\n        if (len > l) {\n          len = l;\n          inside[i].len = l;\n          res = inside[i];\n        }\n      }\n\n      return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n\n\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min; // Set\n\n    var Set = function (items) {\n      this.items = [];\n      this.bindings = {};\n      this.length = 0;\n      this.type = \"set\";\n\n      if (items) {\n        for (var i = 0, ii = items.length; i < ii; i++) {\n          if (items[i]) {\n            this[this.items.length] = this.items[this.items.length] = items[i];\n            this.length++;\n          }\n        }\n      }\n    },\n        setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n\n\n    setproto.push = function () {\n      var item, len;\n\n      for (var i = 0, ii = arguments.length; i < ii; i++) {\n        item = arguments[i];\n\n        if (item) {\n          len = this.items.length;\n          this[len] = this.items[len] = item;\n          this.length++;\n        }\n      }\n\n      return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n\n\n    setproto.pop = function () {\n      this.length && delete this[this.length--];\n      return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n\n\n    setproto.forEach = function (callback, thisArg) {\n      for (var i = 0, ii = this.items.length; i < ii; i++) {\n        if (callback.call(thisArg, this.items[i], i) === false) {\n          return this;\n        }\n      }\n\n      return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n\n\n    setproto.animate = function (attrs, ms, easing, callback) {\n      if (typeof easing == \"function\" && !easing.length) {\n        callback = easing;\n        easing = mina.linear;\n      }\n\n      if (attrs instanceof Snap._.Animation) {\n        callback = attrs.callback;\n        easing = attrs.easing;\n        ms = easing.dur;\n        attrs = attrs.attr;\n      }\n\n      var args = arguments;\n\n      if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n        var each = true;\n      }\n\n      var begin,\n          handler = function () {\n        if (begin) {\n          this.b = begin;\n        } else {\n          begin = this.b;\n        }\n      },\n          cb = 0,\n          set = this,\n          callbacker = callback && function () {\n        if (++cb == set.length) {\n          callback.call(this);\n        }\n      };\n\n      return this.forEach(function (el, i) {\n        eve.once(\"snap.animcreated.\" + el.id, handler);\n\n        if (each) {\n          args[i] && el.animate.apply(el, args[i]);\n        } else {\n          el.animate(attrs, ms, easing, callbacker);\n        }\n      });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n\n\n    setproto.remove = function () {\n      while (this.length) {\n        this.pop().remove();\n      }\n\n      return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n\n\n    setproto.bind = function (attr, a, b) {\n      var data = {};\n\n      if (typeof a == \"function\") {\n        this.bindings[attr] = a;\n      } else {\n        var aname = b || attr;\n\n        this.bindings[attr] = function (v) {\n          data[aname] = v;\n          a.attr(data);\n        };\n      }\n\n      return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n\n\n    setproto.attr = function (value) {\n      var unbound = {};\n\n      for (var k in value) {\n        if (this.bindings[k]) {\n          this.bindings[k](value[k]);\n        } else {\n          unbound[k] = value[k];\n        }\n      }\n\n      for (var i = 0, ii = this.items.length; i < ii; i++) {\n        this.items[i].attr(unbound);\n      }\n\n      return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n\n\n    setproto.clear = function () {\n      while (this.length) {\n        this.pop();\n      }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n\n\n    setproto.splice = function (index, count, insertion) {\n      index = index < 0 ? mmax(this.length + index, 0) : index;\n      count = mmax(0, mmin(this.length - index, count));\n      var tail = [],\n          todel = [],\n          args = [],\n          i;\n\n      for (i = 2; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n\n      for (i = 0; i < count; i++) {\n        todel.push(this[index + i]);\n      }\n\n      for (; i < this.length - index; i++) {\n        tail.push(this[index + i]);\n      }\n\n      var arglen = args.length;\n\n      for (i = 0; i < arglen + tail.length; i++) {\n        this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n      }\n\n      i = this.items.length = this.length -= count - arglen;\n\n      while (this[i]) {\n        delete this[i++];\n      }\n\n      return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n\n\n    setproto.exclude = function (el) {\n      for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n        this.splice(i, 1);\n        return true;\n      }\n\n      return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n\n\n    setproto.insertAfter = function (el) {\n      var i = this.items.length;\n\n      while (i--) {\n        this.items[i].insertAfter(el);\n      }\n\n      return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n\n\n    setproto.getBBox = function () {\n      var x = [],\n          y = [],\n          x2 = [],\n          y2 = [];\n\n      for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n        var box = this.items[i].getBBox();\n        x.push(box.x);\n        y.push(box.y);\n        x2.push(box.x + box.width);\n        y2.push(box.y + box.height);\n      }\n\n      x = mmin.apply(0, x);\n      y = mmin.apply(0, y);\n      x2 = mmax.apply(0, x2);\n      y2 = mmax.apply(0, y2);\n      return {\n        x: x,\n        y: y,\n        x2: x2,\n        y2: y2,\n        width: x2 - x,\n        height: y2 - y,\n        cx: x + (x2 - x) / 2,\n        cy: y + (y2 - y) / 2\n      };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n\n\n    setproto.clone = function (s) {\n      s = new Set();\n\n      for (var i = 0, ii = this.items.length; i < ii; i++) {\n        s.push(this.items[i].clone());\n      }\n\n      return s;\n    };\n\n    setproto.toString = function () {\n      return \"Snap\\u2018s set\";\n    };\n\n    setproto.type = \"set\"; // export\n\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n\n    Snap.set = function () {\n      var set = new Set();\n\n      if (arguments.length) {\n        set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n      }\n\n      return set;\n    };\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n\n    function getEmpty(item) {\n      var l = item[0];\n\n      switch (l.toLowerCase()) {\n        case \"t\":\n          return [l, 0, 0];\n\n        case \"m\":\n          return [l, 1, 0, 0, 1, 0, 0];\n\n        case \"r\":\n          if (item.length == 4) {\n            return [l, 0, item[2], item[3]];\n          } else {\n            return [l, 0];\n          }\n\n        case \"s\":\n          if (item.length == 5) {\n            return [l, 1, 1, item[3], item[4]];\n          } else if (item.length == 3) {\n            return [l, 1, 1];\n          } else {\n            return [l, 1];\n          }\n\n      }\n    }\n\n    function equaliseTransform(t1, t2, getBBox) {\n      t1 = t1 || new Snap.Matrix();\n      t2 = t2 || new Snap.Matrix();\n      t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n      t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n      var maxlength = Math.max(t1.length, t2.length),\n          from = [],\n          to = [],\n          i = 0,\n          j,\n          jj,\n          tt1,\n          tt2;\n\n      for (; i < maxlength; i++) {\n        tt1 = t1[i] || getEmpty(t2[i]);\n        tt2 = t2[i] || getEmpty(tt1);\n\n        if (tt1[0] != tt2[0] || tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) || tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])) {\n          t1 = Snap._.transform2matrix(t1, getBBox());\n          t2 = Snap._.transform2matrix(t2, getBBox());\n          from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n          to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n          break;\n        }\n\n        from[i] = [];\n        to[i] = [];\n\n        for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n          j in tt1 && (from[i][j] = tt1[j]);\n          j in tt2 && (to[i][j] = tt2[j]);\n        }\n      }\n\n      return {\n        from: path2array(from),\n        to: path2array(to),\n        f: getPath(from)\n      };\n    }\n\n    function getNumber(val) {\n      return val;\n    }\n\n    function getUnit(unit) {\n      return function (val) {\n        return +val.toFixed(3) + unit;\n      };\n    }\n\n    function getViewBox(val) {\n      return val.join(\" \");\n    }\n\n    function getColour(clr) {\n      return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n\n    function getPath(path) {\n      var k = 0,\n          i,\n          ii,\n          j,\n          jj,\n          out,\n          a,\n          b = [];\n\n      for (i = 0, ii = path.length; i < ii; i++) {\n        out = \"[\";\n        a = ['\"' + path[i][0] + '\"'];\n\n        for (j = 1, jj = path[i].length; j < jj; j++) {\n          a[j] = \"val[\" + k++ + \"]\";\n        }\n\n        out += a + \"]\";\n        b[i] = out;\n      }\n\n      return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n\n    function path2array(path) {\n      var out = [];\n\n      for (var i = 0, ii = path.length; i < ii; i++) {\n        for (var j = 1, jj = path[i].length; j < jj; j++) {\n          out.push(path[i][j]);\n        }\n      }\n\n      return out;\n    }\n\n    function isNumeric(obj) {\n      return isFinite(obj);\n    }\n\n    function arrayEqual(arr1, arr2) {\n      if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n        return false;\n      }\n\n      return arr1.toString() == arr2.toString();\n    }\n\n    Element.prototype.equal = function (name, b) {\n      return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n\n    eve.on(\"snap.util.equal\", function (name, b) {\n      var A,\n          B,\n          a = Str(this.attr(name) || \"\"),\n          el = this;\n\n      if (names[name] == \"colour\") {\n        A = Snap.color(a);\n        B = Snap.color(b);\n        return {\n          from: [A.r, A.g, A.b, A.opacity],\n          to: [B.r, B.g, B.b, B.opacity],\n          f: getColour\n        };\n      }\n\n      if (name == \"viewBox\") {\n        A = this.attr(name).vb.split(\" \").map(Number);\n        B = b.split(\" \").map(Number);\n        return {\n          from: A,\n          to: B,\n          f: getViewBox\n        };\n      }\n\n      if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n        if (typeof b == \"string\") {\n          b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n        }\n\n        a = this.matrix;\n\n        if (!Snap._.rgTransform.test(b)) {\n          b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n        } else {\n          b = Snap._.transform2matrix(b, this.getBBox());\n        }\n\n        return equaliseTransform(a, b, function () {\n          return el.getBBox(1);\n        });\n      }\n\n      if (name == \"d\" || name == \"path\") {\n        A = Snap.path.toCubic(a, b);\n        return {\n          from: path2array(A[0]),\n          to: path2array(A[1]),\n          f: getPath(A[0])\n        };\n      }\n\n      if (name == \"points\") {\n        A = Str(a).split(Snap._.separator);\n        B = Str(b).split(Snap._.separator);\n        return {\n          from: A,\n          to: B,\n          f: function (val) {\n            return val;\n          }\n        };\n      }\n\n      if (isNumeric(a) && isNumeric(b)) {\n        return {\n          from: parseFloat(a),\n          to: parseFloat(b),\n          f: getNumber\n        };\n      }\n\n      var aUnit = a.match(reUnit),\n          bUnit = Str(b).match(reUnit);\n\n      if (aUnit && arrayEqual(aUnit, bUnit)) {\n        return {\n          from: parseFloat(a),\n          to: parseFloat(b),\n          f: getUnit(aUnit)\n        };\n      } else {\n        return {\n          from: this.asPX(name),\n          to: this.asPX(name, b),\n          f: getNumber\n        };\n      }\n    });\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  // \n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  // \n  // http://www.apache.org/licenses/LICENSE-2.0\n  // \n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        has = \"hasOwnProperty\",\n        supportsTouch = (\"createTouch\" in glob.doc),\n        events = [\"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"],\n        touchMap = {\n      mousedown: \"touchstart\",\n      mousemove: \"touchmove\",\n      mouseup: \"touchend\"\n    },\n        getScroll = function (xy, el) {\n      var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n          doc = el && el.node ? el.node.ownerDocument : glob.doc;\n      return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n        preventDefault = function () {\n      this.returnValue = false;\n    },\n        preventTouch = function () {\n      return this.originalEvent.preventDefault();\n    },\n        stopPropagation = function () {\n      this.cancelBubble = true;\n    },\n        stopTouch = function () {\n      return this.originalEvent.stopPropagation();\n    },\n        addEvent = function (obj, type, fn, element) {\n      var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n          f = function (e) {\n        var scrollY = getScroll(\"y\", element),\n            scrollX = getScroll(\"x\", element);\n\n        if (supportsTouch && touchMap[has](type)) {\n          for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n            if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n              var olde = e;\n              e = e.targetTouches[i];\n              e.originalEvent = olde;\n              e.preventDefault = preventTouch;\n              e.stopPropagation = stopTouch;\n              break;\n            }\n          }\n        }\n\n        var x = e.clientX + scrollX,\n            y = e.clientY + scrollY;\n        return fn.call(element, e, x, y);\n      };\n\n      if (type !== realName) {\n        obj.addEventListener(type, f, false);\n      }\n\n      obj.addEventListener(realName, f, false);\n      return function () {\n        if (type !== realName) {\n          obj.removeEventListener(type, f, false);\n        }\n\n        obj.removeEventListener(realName, f, false);\n        return true;\n      };\n    },\n        drag = [],\n        dragMove = function (e) {\n      var x = e.clientX,\n          y = e.clientY,\n          scrollY = getScroll(\"y\"),\n          scrollX = getScroll(\"x\"),\n          dragi,\n          j = drag.length;\n\n      while (j--) {\n        dragi = drag[j];\n\n        if (supportsTouch) {\n          var i = e.touches && e.touches.length,\n              touch;\n\n          while (i--) {\n            touch = e.touches[i];\n\n            if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n              x = touch.clientX;\n              y = touch.clientY;\n              (e.originalEvent ? e.originalEvent : e).preventDefault();\n              break;\n            }\n          }\n        } else {\n          e.preventDefault();\n        }\n\n        var node = dragi.el.node,\n            o,\n            next = node.nextSibling,\n            parent = node.parentNode,\n            display = node.style.display; // glob.win.opera && parent.removeChild(node);\n        // node.style.display = \"none\";\n        // o = dragi.el.paper.getElementByPoint(x, y);\n        // node.style.display = display;\n        // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n        // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n\n        x += scrollX;\n        y += scrollY;\n        eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n      }\n    },\n        dragUp = function (e) {\n      Snap.unmousemove(dragMove).unmouseup(dragUp);\n      var i = drag.length,\n          dragi;\n\n      while (i--) {\n        dragi = drag[i];\n        dragi.el._drag = {};\n        eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n        eve.off(\"snap.drag.*.\" + dragi.el.id);\n      }\n\n      drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n\n    for (var i = events.length; i--;) {\n      (function (eventName) {\n        Snap[eventName] = elproto[eventName] = function (fn, scope) {\n          if (Snap.is(fn, \"function\")) {\n            this.events = this.events || [];\n            this.events.push({\n              name: eventName,\n              f: fn,\n              unbind: addEvent(this.node || document, eventName, fn, scope || this)\n            });\n          } else {\n            for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n              try {\n                this.events[i].f.call(this);\n              } catch (e) {}\n            }\n          }\n\n          return this;\n        };\n\n        Snap[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n          var events = this.events || [],\n              l = events.length;\n\n          while (l--) if (events[l].name == eventName && (events[l].f == fn || !fn)) {\n            events[l].unbind();\n            events.splice(l, 1);\n            !events.length && delete this.events;\n            return this;\n          }\n\n          return this;\n        };\n      })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n\n\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n      return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n\n\n    elproto.unhover = function (f_in, f_out) {\n      return this.unmouseover(f_in).unmouseout(f_out);\n    };\n\n    var draggable = []; // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n      var el = this;\n\n      if (!arguments.length) {\n        var origTransform;\n        return el.drag(function (dx, dy) {\n          this.attr({\n            transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n          });\n        }, function () {\n          origTransform = this.transform().local;\n        });\n      }\n\n      function start(e, x, y) {\n        (e.originalEvent || e).preventDefault();\n        el._drag.x = x;\n        el._drag.y = y;\n        el._drag.id = e.identifier;\n        !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n        drag.push({\n          el: el,\n          move_scope: move_scope,\n          start_scope: start_scope,\n          end_scope: end_scope\n        });\n        onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n        onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n        onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n        eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n      }\n\n      function init(e, x, y) {\n        eve(\"snap.draginit.\" + el.id, el, e, x, y);\n      }\n\n      eve.on(\"snap.draginit.\" + el.id, start);\n      el._drag = {};\n      draggable.push({\n        el: el,\n        start: start,\n        init: init\n      });\n      el.mousedown(init);\n      return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n\n\n    elproto.undrag = function () {\n      var i = draggable.length;\n\n      while (i--) if (draggable[i].el == this) {\n        this.unmousedown(draggable[i].init);\n        draggable.splice(i, 1);\n        eve.unbind(\"snap.drag.*.\" + this.id);\n        eve.unbind(\"snap.draginit.\" + this.id);\n      }\n\n      !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n      return this;\n    };\n  }); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n\n    pproto.filter = function (filstr) {\n      var paper = this;\n\n      if (paper.type != \"svg\") {\n        paper = paper.paper;\n      }\n\n      var f = Snap.parse(Str(filstr)),\n          id = Snap._.id(),\n          width = paper.node.offsetWidth,\n          height = paper.node.offsetHeight,\n          filter = $(\"filter\");\n\n      $(filter, {\n        id: id,\n        filterUnits: \"userSpaceOnUse\"\n      });\n      filter.appendChild(f.node);\n      paper.defs.appendChild(filter);\n      return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n      eve.stop();\n      var p = $(this.node, \"filter\");\n\n      if (p) {\n        var match = Str(p).match(rgurl);\n        return match && Snap.select(match[1]);\n      }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n      if (value instanceof Element && value.type == \"filter\") {\n        eve.stop();\n        var id = value.node.id;\n\n        if (!id) {\n          $(value.node, {\n            id: value.id\n          });\n          id = value.id;\n        }\n\n        $(this.node, {\n          filter: Snap.url(id)\n        });\n      }\n\n      if (!value || value == \"none\") {\n        eve.stop();\n        this.node.removeAttribute(\"filter\");\n      }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n\n    Snap.filter.blur = function (x, y) {\n      if (x == null) {\n        x = 2;\n      }\n\n      var def = y == null ? x : [x, y];\n      return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n        def: def\n      });\n    };\n\n    Snap.filter.blur.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n\n\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n      if (opacity == null) {\n        if (color == null) {\n          opacity = blur;\n          blur = 4;\n          color = \"#000\";\n        } else {\n          opacity = color;\n          color = blur;\n          blur = 4;\n        }\n      }\n\n      if (blur == null) {\n        blur = 4;\n      }\n\n      if (opacity == null) {\n        opacity = 1;\n      }\n\n      if (dx == null) {\n        dx = 0;\n        dy = 2;\n      }\n\n      if (dy == null) {\n        dy = dx;\n      }\n\n      color = Snap.color(color);\n      return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n        color: color,\n        dx: dx,\n        dy: dy,\n        blur: blur,\n        opacity: opacity\n      });\n    };\n\n    Snap.filter.shadow.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.grayscale = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n\n      return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n        a: 0.2126 + 0.7874 * (1 - amount),\n        b: 0.7152 - 0.7152 * (1 - amount),\n        c: 0.0722 - 0.0722 * (1 - amount),\n        d: 0.2126 - 0.2126 * (1 - amount),\n        e: 0.7152 + 0.2848 * (1 - amount),\n        f: 0.0722 - 0.0722 * (1 - amount),\n        g: 0.2126 - 0.2126 * (1 - amount),\n        h: 0.0722 + 0.9278 * (1 - amount)\n      });\n    };\n\n    Snap.filter.grayscale.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.sepia = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n\n      return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n        a: 0.393 + 0.607 * (1 - amount),\n        b: 0.769 - 0.769 * (1 - amount),\n        c: 0.189 - 0.189 * (1 - amount),\n        d: 0.349 - 0.349 * (1 - amount),\n        e: 0.686 + 0.314 * (1 - amount),\n        f: 0.168 - 0.168 * (1 - amount),\n        g: 0.272 - 0.272 * (1 - amount),\n        h: 0.534 - 0.534 * (1 - amount),\n        i: 0.131 + 0.869 * (1 - amount)\n      });\n    };\n\n    Snap.filter.sepia.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.saturate = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n\n      return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n        amount: 1 - amount\n      });\n    };\n\n    Snap.filter.saturate.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.hueRotate = function (angle) {\n      angle = angle || 0;\n      return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n        angle: angle\n      });\n    };\n\n    Snap.filter.hueRotate.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.invert = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      } //        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n\n\n      return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n        amount: amount,\n        amount2: 1 - amount\n      });\n    };\n\n    Snap.filter.invert.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.brightness = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n\n      return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n        amount: amount\n      });\n    };\n\n    Snap.filter.brightness.toString = function () {\n      return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n\n\n    Snap.filter.contrast = function (amount) {\n      if (amount == null) {\n        amount = 1;\n      }\n\n      return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n        amount: amount,\n        amount2: .5 - amount / 2\n      });\n    };\n\n    Snap.filter.contrast.toString = function () {\n      return this();\n    };\n  }); // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n      return \"T\" + this.dx + \",\" + this.dy;\n    };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n\n\n    Element.prototype.getAlign = function (el, way) {\n      if (way == null && is(el, \"string\")) {\n        way = el;\n        el = null;\n      }\n\n      el = el || this.paper;\n      var bx = el.getBBox ? el.getBBox() : box(el),\n          bb = this.getBBox(),\n          out = {};\n      way = way && way.match(firstLetter);\n      way = way ? way[1].toLowerCase() : \"c\";\n\n      switch (way) {\n        case \"t\":\n          out.dx = 0;\n          out.dy = bx.y - bb.y;\n          break;\n\n        case \"b\":\n          out.dx = 0;\n          out.dy = bx.y2 - bb.y2;\n          break;\n\n        case \"m\":\n          out.dx = 0;\n          out.dy = bx.cy - bb.cy;\n          break;\n\n        case \"l\":\n          out.dx = bx.x - bb.x;\n          out.dy = 0;\n          break;\n\n        case \"r\":\n          out.dx = bx.x2 - bb.x2;\n          out.dy = 0;\n          break;\n\n        default:\n          out.dx = bx.cx - bb.cx;\n          out.dy = 0;\n          break;\n      }\n\n      out.toString = toString;\n      return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n\n\n    Element.prototype.align = function (el, way) {\n      return this.transform(\"...\" + this.getAlign(el, way));\n    };\n  }); // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n\n  Snap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n\n    Snap.flat = {};\n\n    function saveColor(colors) {\n      colors = colors.split(/(?=#)/);\n      var color = new String(colors[5]);\n      color[50] = colors[0];\n      color[100] = colors[1];\n      color[200] = colors[2];\n      color[300] = colors[3];\n      color[400] = colors[4];\n      color[500] = colors[5];\n      color[600] = colors[6];\n      color[700] = colors[7];\n      color[800] = colors[8];\n      color[900] = colors[9];\n\n      if (colors[10]) {\n        color.A100 = colors[10];\n        color.A200 = colors[11];\n        color.A400 = colors[12];\n        color.A700 = colors[13];\n      }\n\n      return color;\n    }\n\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n\n    Snap.importMUIColors = function () {\n      for (var color in Snap.mui) {\n        if (Snap.mui.hasOwnProperty(color)) {\n          window[color] = Snap.mui[color];\n        }\n      }\n    };\n  });\n  return Snap;\n});","map":{"version":3,"sources":["/Users/mkumar18/dev/tools/svg-path-splitter/node_modules/snapsvg/dist/snap.svg.js"],"names":["glob","version","has","separator","comaseparator","wildcard","fun","numsort","a","b","current_event","stop","events","n","firstDefined","i","ii","length","lastDefined","objtos","Object","prototype","toString","Str","String","isArray","Array","ar","call","eve","name","scope","e","oldstop","args","slice","arguments","listeners","z","f","l","indexed","queue","out","ce","errors","push","zIndex","sort","apply","_events","names","split","item","items","k","j","jj","nes","es","concat","sep","replace","RegExp","on","exist","hasOwnProperty","event","attrs","nt","subname","cur","join","test","nts","off","unbind","key","splice","inodes","unshift","funcs","prune","once","f2","module","exports","define","amd","factory","require","window","mina","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","Date","getTime","requestID","idgen","idprefix","ID","diff","A","B","res","dif","bb","timer","now","sta","val","s","ds","dur","speed","spd","duration","stopit","id","update","pause","pdif","get","resume","frame","start","end","easing","set","timeStamp","len","anim","linear","status","time","getById","easeout","Math","pow","easein","easeinout","q","Q","sqrt","x","X","abs","y","Y","t","backin","backout","elastic","sin","PI","bounce","p","Snap","root","w","h","nodeType","wrap","is","Element","doc","querySelector","Paper","_","win","document","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","round","E","S","objectToString","ISURL","colourRegExp","bezierrg","whitespace","commaSpaces","hsrg","hs","rg","pathCommand","tCommand","pathValues","el","type","xlink","xmlns","hub","URL","url","$","attr","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","getAttrs","attributes","namespaceURI","textContent","o","toLowerCase","isFinite","format","tokenRegex","objNotationRegex","replacer","all","obj","quote","quotedName","isFunc","str","clone","constructor","repush","array","cacher","postprocessor","newf","arg","cache","count","shift","angle","x1","y1","x2","y2","x3","y3","atan2","rad","deg","x_y","x_y_w_h","width","height","tan","cos","asin","num","acos","atan","len2","closestPoint","path","distance2","dx","dy","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","best","bestLength","bestDistance","Infinity","scan","scanLength","scanDistance","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","value","tolerance","rem","getRGB","colour","indexOf","r","g","hex","error","rgbtoString","charAt","toHex","red","green","blue","opacity","rgb","match","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","color","getElementsByTagName","style","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","string","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","C","H","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","data","params","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","unit2px","contains","compareDocumentPosition","adown","documentElement","bup","parentNode","getSomeDefs","ownerSVGElement","select","pdefs","defs","make","getSomeSVG","svg","mgr","fill","appendChild","getW","getBBox","getH","nam","removeChild","query","selectAll","nodelist","querySelectorAll","add2group","list","forEach","children","childNodes","setInterval","snap","paper","tagName","nodeName","anims","transform","mask","pattern","symbol","method","json","att","parse","createDocumentFragment","full","div","createElement","innerHTML","firstChild","Fragment","frag","fragment","parent","desc","proto","ownerDocument","body","dom","contentDocument","ch","jsonFiller","toJSON","lastIndexOf","css","letter","cssAttr","toUpperCase","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","onreadystatechange","readyState","send","load","responseText","getOffset","elem","box","getBoundingClientRect","docElem","clientTop","clientLeft","top","pageYOffset","scrollTop","left","pageXOffset","scrollLeft","getElementByPoint","canvas","target","elementFromPoint","opera","so","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","isWithoutTransform","getClientRects","removed","localMatrix","original","href","getElementById","pathfinder","deflt","bboxwt","realPath","matrix","map","propString","extractTransform","doReturn","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","fixids","els","ids","uses","urltest","linktest","oldid","old","fs","cloneNode","toDefs","toPattern","patternUnits","viewBox","marker","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","removeData","outerSVG","innerSVG","chld","toDataURL","btoa","contents","unescape","from","to","Animation","animation","inAnim","_attrs","_callback","curStatus","animate","setter","fkeys","tkeys","keys","eq","equal","d","matrixproto","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","norm","normalize","mag","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","reURLValue","deurl","clipIt","clip","undefined","fillStroke","grad","gradient","gradrg","parseGrad","tokens","stops","seed","step","toAbsolute","txt","className","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setFontSize","fontSize","getter","textExtract","chi","internal","getFontSize","rgNotSpace","rgBadSpace","rgTrim","addClass","classes","curClasses","pos","clazz","finalValue","removeClass","hasClass","toggleClass","flag","operators","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","isNaN","bplus","rect","circle","preload","onerror","src","img","cssText","onload","image","preserveAspectRatio","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","stopOffset","GgetBBox","GsetStops","addStop","gradientLinear","gradientRadial","gradientUnits","setStops","fx","fy","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","path2curve","sp","subpaths","point","getSubpathsAtLength","t1","t13","t12","t2","t3","mx","my","nx","ny","ax","ay","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","ll","intersect","denominator","px","py","px2","py2","inter","bez1","bez2","interHelper","interCount","justCount","l1","l2","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","pathIntersection","path1","path2","interPathHelper","pathIntersectionNumber","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","isPointInsidePath","pathBBox","dim","xmin","ymin","xmax","ymax","ellipsePath","getPath","pathToRelative","lowerCase","rel","pa","pathToAbsolute","pa0","crz","dots","pop","catmullRom2bezier","l2c","q2c","_13","_23","a2c","large_arc_flag","sweep_flag","recursive","_120","rx2","ry2","f1","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","findDotAtSegment","x0","y0","tvalues","bounds","b2ac","sqrtb2ac","jlen","mt","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","mapPath","pathi","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","toCubic","Set","bindings","setproto","thisArg","each","begin","handler","cb","callbacker","bind","aname","unbound","index","insertion","tail","todel","arglen","exclude","stroke","getEmpty","equaliseTransform","maxlength","tt1","tt2","path2array","getViewBox","getColour","Function","isNumeric","arrayEqual","arr1","arr2","Number","bUnit","supportsTouch","touchMap","mousedown","mousemove","mouseup","getScroll","preventDefault","returnValue","preventTouch","originalEvent","stopPropagation","cancelBubble","stopTouch","addEvent","fn","element","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touches","touch","identifier","_drag","display","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","eventName","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filter","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","mui","flat","saveColor","colors","A100","A200","A400","A700","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors"],"mappings":"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A;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,SAAK,IAAIv6B,CAAC,GAAGH,MAAM,CAACK,MAApB,EAA4BF,CAAC,EAA7B,GAAkC;AAC9B,OAAC,UAAUq7B,SAAV,EAAqB;AAClBhyB,QAAAA,IAAI,CAACgyB,SAAD,CAAJ,GAAkBle,OAAO,CAACke,SAAD,CAAP,GAAqB,UAAUzB,EAAV,EAAc54B,KAAd,EAAqB;AACxD,cAAIqI,IAAI,CAACM,EAAL,CAAQiwB,EAAR,EAAY,UAAZ,CAAJ,EAA6B;AACzB,iBAAK/5B,MAAL,GAAc,KAAKA,MAAL,IAAe,EAA7B;AACA,iBAAKA,MAAL,CAAYkC,IAAZ,CAAiB;AACbhB,cAAAA,IAAI,EAAEs6B,SADO;AAEb75B,cAAAA,CAAC,EAAEo4B,EAFU;AAGb/1B,cAAAA,MAAM,EAAE81B,QAAQ,CAAC,KAA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","sourcesContent":["// Snap.svg 0.5.0\n//\n// Copyright (c) 2013 – 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// build: 2017-02-06\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.0\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        fun = function () {},\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        };\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     > Arguments\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var e = events,\n                oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                f = false,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event,\n                errors = [];\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n        // Undocumented. Debug only.\n        eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     > Arguments\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     > Arguments\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     > Arguments\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define === \"function\" && define.amd ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\n})(this);\n\n(function (glob, factory) {\n    // AMD support\n    if (typeof define == \"function\" && define.amd) {\n        // Define as an anonymous module\n        define([\"eve\"], function (eve) {\n            return factory(glob, eve);\n        });\n    } else if (typeof exports != \"undefined\") {\n        // Next for Node.js or CommonJS\n        var eve = require(\"eve\");\n        module.exports = factory(glob, eve);\n    } else {\n        // Browser globals (glob is window)\n        // Snap adds itself to window\n        factory(glob, glob.eve);\n    }\n}(window || this, function (window, eve) {\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            // try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            // } catch (e) {\n                // return null;\n            // }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nreturn Snap;\n}));"]},"metadata":{},"sourceType":"script"}