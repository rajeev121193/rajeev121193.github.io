{"ast":null,"code":"var _jsxFileName = \"/Users/mkumar18/dev/tools/svg-path-splitter/src/Images.js\",\n    _s = $RefreshSig$();\n\nimport \"./Images.css\";\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Images() {\n  _s();\n\n  const fileInputField = useRef(null);\n  const [file, setFile] = useState(null);\n\n  const handleNewFileUpload = e => {\n    const {\n      files: newFiles\n    } = e.target;\n\n    if (newFiles.length === 1) {\n      setFile(newFiles[0]);\n    }\n  };\n\n  const isImageFile = file && file.type.split(\"/\")[0] === \"image\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Images\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputField,\n      onChange: handleNewFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Images-input\",\n      children: isImageFile && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(file),\n        alt: \"input svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Images-output\",\n      children: isImageFile && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(file),\n        alt: \"input svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Images, \"0Jgecs9fUgcNgjRmyz06OqJmDMw=\");\n\n_c = Images;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"sources":["/Users/mkumar18/dev/tools/svg-path-splitter/src/Images.js"],"names":["React","useState","useRef","Images","fileInputField","file","setFile","handleNewFileUpload","e","files","newFiles","target","length","isImageFile","type","split","URL","createObjectURL"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAMC,cAAc,GAAGF,MAAM,CAAC,IAAD,CAA7B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMM,mBAAmB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,KAAK,EAAEC;AAAT,QAAsBF,CAAC,CAACG,MAA9B;;AACA,QAAID,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzBN,MAAAA,OAAO,CAACI,QAAQ,CAAC,CAAD,CAAT,CAAP;AACD;AACJ,GALD;;AAOA,QAAMG,WAAW,GAAGR,IAAI,IAAIA,IAAI,CAACS,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,MAA4B,OAAxD;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAEX,cAAxB;AAAwC,MAAA,QAAQ,EAAEG;AAAlD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKM,WAAW,iBAAI;AAAK,QAAA,GAAG,EAAEG,GAAG,CAACC,eAAJ,CAAoBZ,IAApB,CAAV;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADpB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKQ,WAAW,iBAAI;AAAK,QAAA,GAAG,EAAEG,GAAG,CAACC,eAAJ,CAAoBZ,IAApB,CAAV;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADpB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAzBuBF,M;;KAAAA,M","sourcesContent":["import \"./Images.css\"\nimport React, {useState, useRef} from \"react\";\n\nexport default function Images() {\n    const fileInputField = useRef(null);\n    const [file, setFile] = useState(null);\n\n    const handleNewFileUpload = (e) => {\n        const { files: newFiles } = e.target;\n        if (newFiles.length === 1) {\n          setFile(newFiles[0]);\n        }\n    };\n\n    const isImageFile = file && file.type.split(\"/\")[0] === \"image\";\n    \n      \n    return (\n        <div className=\"Images\">\n            <input type=\"file\" ref={fileInputField} onChange={handleNewFileUpload} />\n            <div className=\"Images-input\">\n                {isImageFile && <img src={URL.createObjectURL(file)} alt=\"input svg\"></img>}\n            </div>\n            <div className=\"Images-output\">\n                {isImageFile && <img src={URL.createObjectURL(file)} alt=\"input svg\"></img>}\n            </div>\n        </div>\n    );\n} "]},"metadata":{},"sourceType":"module"}